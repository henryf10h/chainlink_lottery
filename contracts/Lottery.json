{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_VRFCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_LinkToken",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_Winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountWon",
          "type": "uint256"
        }
      ],
      "name": "lastWinner",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_entranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_fundingFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastLottery",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lotteryDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_randomness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_state",
      "outputs": [
        {
          "internalType": "enum Lottery.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_totalLotteryBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_addTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_entranceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_basisPoints",
          "type": "uint256"
        }
      ],
      "name": "setLoterry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Henry Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "1": "C:/Users/Henry Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
    "2": "C:/Users/Henry Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "3": "C:/Users/Henry Alberto/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol",
    "4": "C:/Users/Henry Alberto/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFRequestIDBase.sol",
    "6": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Context": [
        921
      ],
      "LinkTokenInterface": [
        1066
      ],
      "Lottery": [
        633
      ],
      "Ownable": [
        738
      ],
      "ReentrancyGuard": [
        778
      ],
      "TransferHelper": [
        162
      ],
      "VRFConsumerBase": [
        899
      ],
      "VRFRequestIDBase": [
        971
      ]
    },
    "id": 634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:6"
      },
      {
        "absolutePath": "C:/Users/Henry Alberto/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.0/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 900,
        "src": "58:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Henry Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 739,
        "src": "118:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Henry Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 634,
        "sourceUnit": 779,
        "src": "171:62:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TransferHelper",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 162,
        "linearizedBaseContracts": [
          162
        ],
        "name": "TransferHelper",
        "nameLocation": "243:14:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "333:285:6",
              "statements": [
                {
                  "assignments": [
                    14,
                    16
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "414:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "409:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "409:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "436:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 46,
                      "src": "423:17:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "423:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783039356561376233",
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "478:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_157198259_by_1",
                              "typeString": "int_const 157198259"
                            },
                            "value": "0x095ea7b3"
                          },
                          {
                            "id": 22,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "490:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "494:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_157198259_by_1",
                              "typeString": "int_const 157198259"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 19,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "455:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "455:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "455:45:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 17,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "444:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "444:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "444:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "408:93:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "519:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 32,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 29,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16,
                                    "src": "531:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 30,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "531:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 31,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "546:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "531:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 35,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16,
                                    "src": "562:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "569:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        },
                                        "typeName": {
                                          "id": 36,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "569:4:6",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 38,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "568:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 33,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "551:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 34,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "551:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "551:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "531:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 41,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "530:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "519:57:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "578:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
                          "typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
                        },
                        "value": "TransferHelper: APPROVE_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
                          "typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "511:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:100:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "511:100:6"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeApprove",
            "nameLocation": "273:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "293:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "285:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "285:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "308:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "300:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "317:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "312:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "284:39:6"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:6"
            },
            "scope": 162,
            "src": "264:354:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "694:287:6",
              "statements": [
                {
                  "assignments": [
                    57,
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "776:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "771:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "771:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "798:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "785:17:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30786139303539636262",
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "840:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            "value": "0xa9059cbb"
                          },
                          {
                            "id": 65,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "852:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 66,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "856:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2835717307_by_1",
                              "typeString": "int_const 2835717307"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 62,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "817:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "817:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "817:45:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 60,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "806:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "806:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "770:93:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "881:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 72,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "893:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "893:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 74,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "908:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "893:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 78,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "924:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "931:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        },
                                        "typeName": {
                                          "id": 79,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "931:4:6",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 81,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "930:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 76,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "913:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "913:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 82,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "913:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "893:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 84,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "892:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "881:57:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "940:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
                          "typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
                        },
                        "value": "TransferHelper: TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
                          "typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "873:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "873:101:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "873:101:6"
                }
              ]
            },
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nameLocation": "633:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "654:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "646:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "669:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "661:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "678:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "673:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:39:6"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:6"
            },
            "scope": 162,
            "src": "624:357:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1075:310:6",
              "statements": [
                {
                  "assignments": [
                    102,
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1169:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1164:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1164:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 104,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "1191:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "1178:17:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1178:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 115,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30783233623837326464",
                            "id": 109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1233:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            "value": "0x23b872dd"
                          },
                          {
                            "id": 110,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1245:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 111,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "1251:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 112,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "1255:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_599290589_by_1",
                              "typeString": "int_const 599290589"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 107,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1210:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1210:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1210:51:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 105,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1199:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "src": "1199:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1163:99:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 117,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "1280:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 118,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 104,
                                    "src": "1292:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1292:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1307:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1292:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 124,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 104,
                                    "src": "1323:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 126,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1330:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        },
                                        "typeName": {
                                          "id": 125,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1330:4:6",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 127,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1329:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_bool_$",
                                      "typeString": "type(bool)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 122,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1312:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "1312:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1312:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1292:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 130,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1291:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1280:57:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1339:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
                          "typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
                        },
                        "value": "TransferHelper: TRANSFER_FROM_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
                          "typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
                        }
                      ],
                      "id": 116,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1272:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:106:6"
                }
              ]
            },
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "996:16:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1021:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1013:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1036:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1028:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1050:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1042:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1059:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1054:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:53:6"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:6"
            },
            "scope": 162,
            "src": "987:398:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1449:134:6",
              "statements": [
                {
                  "assignments": [
                    144,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1465:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1460:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1460:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 154,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1508:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1498:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 149,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1502:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1498:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 145,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1477:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1477:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 147,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1491:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1477:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1459:52:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "1529:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1538:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
                          "typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
                        },
                        "value": "TransferHelper: ETH_TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
                          "typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1521:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:55:6"
                }
              ]
            },
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferETH",
            "nameLocation": "1400:15:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1424:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1416:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1433:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1428:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1415:24:6"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1449:0:6"
            },
            "scope": 162,
            "src": "1391:192:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 634,
        "src": "235:1350:6",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 163,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 899,
              "src": "1607:15:6"
            },
            "id": 164,
            "nodeType": "InheritanceSpecifier",
            "src": "1607:15:6"
          },
          {
            "baseName": {
              "id": 165,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 738,
              "src": "1624:7:6"
            },
            "id": 166,
            "nodeType": "InheritanceSpecifier",
            "src": "1624:7:6"
          },
          {
            "baseName": {
              "id": 167,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 778,
              "src": "1633:15:6"
            },
            "id": 168,
            "nodeType": "InheritanceSpecifier",
            "src": "1633:15:6"
          }
        ],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 633,
        "linearizedBaseContracts": [
          633,
          778,
          738,
          921,
          899,
          971
        ],
        "name": "Lottery",
        "nameLocation": "1596:7:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a2eaacac",
            "id": 170,
            "mutability": "mutable",
            "name": "s_entranceFee",
            "nameLocation": "1725:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1710:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 169,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1710:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "639a732e",
            "id": 172,
            "mutability": "mutable",
            "name": "s_lotteryDuration",
            "nameLocation": "1758:17:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1743:32:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 171,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1743:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc153edb",
            "id": 174,
            "mutability": "mutable",
            "name": "s_lastLottery",
            "nameLocation": "1795:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1780:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 173,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ae771f6b",
            "id": 177,
            "mutability": "mutable",
            "name": "s_players",
            "nameLocation": "1837:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1812:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 175,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1812:15:6",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 176,
              "nodeType": "ArrayTypeName",
              "src": "1812:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3dc452e1",
            "id": 179,
            "mutability": "mutable",
            "name": "s_winner",
            "nameLocation": "1961:8:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1946:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 178,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1946:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a069c0e9",
            "id": 181,
            "mutability": "mutable",
            "name": "s_fundingFee",
            "nameLocation": "1989:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "1974:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1974:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c7f0e36b",
            "id": 183,
            "mutability": "mutable",
            "name": "s_totalLotteryBalance",
            "nameLocation": "2077:21:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2062:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 182,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2062:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f998afb",
            "id": 185,
            "mutability": "mutable",
            "name": "s_randomness",
            "nameLocation": "2117:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2102:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 184,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2102:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 187,
            "mutability": "immutable",
            "name": "keyHash",
            "nameLocation": "2160:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2133:34:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 186,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2133:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 189,
            "mutability": "immutable",
            "name": "chainLinkFee",
            "nameLocation": "2330:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2303:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 188,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2303:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e3d670d7",
            "id": 193,
            "mutability": "mutable",
            "name": "balance",
            "nameLocation": "2382:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2347:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 192,
              "keyType": {
                "id": 190,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2355:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2347:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 191,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2366:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Lottery.State",
            "id": 197,
            "members": [
              {
                "id": 194,
                "name": "OPEN",
                "nameLocation": "2405:4:6",
                "nodeType": "EnumValue",
                "src": "2405:4:6"
              },
              {
                "id": 195,
                "name": "CLOSED",
                "nameLocation": "2410:6:6",
                "nodeType": "EnumValue",
                "src": "2410:6:6"
              },
              {
                "id": 196,
                "name": "CALCULATING",
                "nameLocation": "2417:11:6",
                "nodeType": "EnumValue",
                "src": "2417:11:6"
              }
            ],
            "name": "State",
            "nameLocation": "2398:5:6",
            "nodeType": "EnumDefinition",
            "src": "2393:36:6"
          },
          {
            "constant": false,
            "functionSelector": "f9122e60",
            "id": 200,
            "mutability": "mutable",
            "name": "s_state",
            "nameLocation": "2445:7:6",
            "nodeType": "VariableDeclaration",
            "scope": 633,
            "src": "2432:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$197",
              "typeString": "enum Lottery.State"
            },
            "typeName": {
              "id": 199,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 198,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 197,
                "src": "2432:5:6"
              },
              "referencedDeclaration": 197,
              "src": "2432:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$197",
                "typeString": "enum Lottery.State"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "5bdbc1343bc7aaad0f988523e70596fda0b3234307a0b5df7a78ddb9cbd4668b",
            "id": 206,
            "name": "lastWinner",
            "nameLocation": "2519:10:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_Winner",
                  "nameLocation": "2546:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2530:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountWon",
                  "nameLocation": "2563:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2555:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2529:45:6"
            },
            "src": "2513:62:6"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "3347:137:6",
              "statements": [
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 219,
                      "name": "keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "3357:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3367:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3357:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:18:6"
                },
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 223,
                      "name": "chainLinkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "3385:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "302e31",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3400:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_10",
                          "typeString": "rational_const 1 / 10"
                        },
                        "value": "0.1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3406:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3410:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "3406:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "3400:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      }
                    },
                    "src": "3385:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:27:6"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 231,
                      "name": "s_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "3455:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 232,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "3465:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                          "typeString": "type(enum Lottery.State)"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "3465:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "src": "3455:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$197",
                      "typeString": "enum Lottery.State"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3455:22:6"
                }
              ]
            },
            "id": 237,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 215,
                    "name": "_VRFCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 208,
                    "src": "3310:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 216,
                    "name": "_LinkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 210,
                    "src": "3327:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 217,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 214,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 899,
                  "src": "3294:15:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3294:44:6"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_VRFCoordinator",
                  "nameLocation": "3229:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "3221:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_LinkToken",
                  "nameLocation": "3254:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "3246:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "3274:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "3266:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3220:63:6"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3347:0:6"
            },
            "scope": 633,
            "src": "3209:275:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3520:381:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 241,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3534:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 242,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3545:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 194,
                          "src": "3545:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "3534:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d757374206265204f50454e2c20706c6561736520776169742e",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3556:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_812211b2c5fc6be3f549bae72f3f8298970d8ba136af7580f34e40bb8c0bec5a",
                          "typeString": "literal_string \"Lottery must be OPEN, please wait.\""
                        },
                        "value": "Lottery must be OPEN, please wait."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_812211b2c5fc6be3f549bae72f3f8298970d8ba136af7580f34e40bb8c0bec5a",
                          "typeString": "literal_string \"Lottery must be OPEN, please wait.\""
                        }
                      ],
                      "id": 240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3526:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3607:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3607:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 251,
                          "name": "s_entranceFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "3620:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3607:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652c2073656e64207878204d415449432e",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3634:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7ea74261efeb8b08ee51aeb5ceee833b3d183e6e81cdbf7015ee43126d5e490",
                          "typeString": "literal_string \"Please, send xx MATIC.\""
                        },
                        "value": "Please, send xx MATIC."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7ea74261efeb8b08ee51aeb5ceee833b3d183e6e81cdbf7015ee43126d5e490",
                          "typeString": "literal_string \"Please, send xx MATIC.\""
                        }
                      ],
                      "id": 248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3599:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3599:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 255,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 257,
                            "name": "s_players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "3673:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3673:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3693:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "3673:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756e207061727469636970616e742773206361706163697479",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e954dc8cecead9848005879aa82859af1ee04b35bb0e19c3e69d66cfa554e366",
                          "typeString": "literal_string \"Maximun participant's capacity\""
                        },
                        "value": "Maximun participant's capacity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e954dc8cecead9848005879aa82859af1ee04b35bb0e19c3e69d66cfa554e366",
                          "typeString": "literal_string \"Maximun participant's capacity\""
                        }
                      ],
                      "id": 256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3665:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 265,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3744:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3744:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 267,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "3758:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3758:7:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3744:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e65722063616e206e6f7420706172746963697061746520696e2074686520204c6f74746572792e",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67bd711277a8574d7cc8038a0bce9741394e8eeb4aff110ab7b1637e9460189b",
                          "typeString": "literal_string \"Owner can not participate in the  Lottery.\""
                        },
                        "value": "Owner can not participate in the  Lottery."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67bd711277a8574d7cc8038a0bce9741394e8eeb4aff110ab7b1637e9460189b",
                          "typeString": "literal_string \"Owner can not participate in the  Lottery.\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3736:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:75:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3840:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3840:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3832:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3832:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3832:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 273,
                        "name": "s_players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3817:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3817:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3817:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:35:6"
                },
                {
                  "expression": {
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 283,
                      "name": "s_totalLotteryBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "3858:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 284,
                      "name": "s_entranceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "3883:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3858:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3858:38:6"
                }
              ]
            },
            "functionSelector": "e97dcb62",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nameLocation": "3497:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3502:2:6"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3520:0:6"
            },
            "scope": 633,
            "src": "3488:413:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "3939:407:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 294,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "3953:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 295,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "3964:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 195,
                          "src": "3964:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "3953:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d75737420626520434c4f5345442c20706c6561736520776169742e",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3977:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36f9aa7a5e4bc8fe69a1e70c4f23153f8bf0eae219f2d1c9373185b2751377f6",
                          "typeString": "literal_string \"Lottery must be CLOSED, please wait.\""
                        },
                        "value": "Lottery must be CLOSED, please wait."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36f9aa7a5e4bc8fe69a1e70c4f23153f8bf0eae219f2d1c9373185b2751377f6",
                          "typeString": "literal_string \"Lottery must be CLOSED, please wait.\""
                        }
                      ],
                      "id": 293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3945:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3945:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3945:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 306,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4053:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lottery_$633",
                                    "typeString": "contract Lottery"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Lottery_$633",
                                    "typeString": "contract Lottery"
                                  }
                                ],
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4045:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 304,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4045:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4045:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 302,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "4030:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1066",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 998,
                            "src": "4030:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4030:29:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 309,
                          "name": "chainLinkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "4063:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4030:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742077697468206661756365742e",
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4077:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5067d630b9c1d39a0d94a16a7e2493acef03c49048c96e4478fcf9865e927c3d",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet.\""
                        },
                        "value": "Not enough LINK - fill contract with faucet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5067d630b9c1d39a0d94a16a7e2493acef03c49048c96e4478fcf9865e927c3d",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet.\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4022:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4022:102:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "4022:102:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 315,
                          "name": "s_lotteryDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "4138:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 316,
                          "name": "s_lastLottery",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "4158:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4138:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f74746572792068617320746f206c617374206c6f6e6765722e",
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4172:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ef7cfff19694124196b95e8f4e2b1237f6511765cfb3f59204e3fd13ba63d91",
                          "typeString": "literal_string \"Lottery has to last longer.\""
                        },
                        "value": "Lottery has to last longer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ef7cfff19694124196b95e8f4e2b1237f6511765cfb3f59204e3fd13ba63d91",
                          "typeString": "literal_string \"Lottery has to last longer.\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4130:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:72:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 322,
                            "name": "s_entranceFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "4216:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4232:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4216:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 325,
                            "name": "s_fundingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "4237:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4252:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4237:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4216:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45697468657220656e7472616e63652066656520616e642066756e64696e6720666565206861766520746f2062652061626f7665206365726f2e",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4254:60:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aff94bdfd716f72a57593a6ca2f82ff918b239102b589e6509de686ecf67fdeb",
                          "typeString": "literal_string \"Either entrance fee and funding fee have to be above cero.\""
                        },
                        "value": "Either entrance fee and funding fee have to be above cero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aff94bdfd716f72a57593a6ca2f82ff918b239102b589e6509de686ecf67fdeb",
                          "typeString": "literal_string \"Either entrance fee and funding fee have to be above cero.\""
                        }
                      ],
                      "id": 321,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4208:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:107:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "4208:107:6"
                },
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 332,
                      "name": "s_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "4321:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 333,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "4331:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                          "typeString": "type(enum Lottery.State)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 194,
                      "src": "4331:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "src": "4321:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$197",
                      "typeString": "enum Lottery.State"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:20:6"
                }
              ]
            },
            "functionSelector": "be9a6555",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 680,
                  "src": "3929:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3929:9:6"
              }
            ],
            "name": "start",
            "nameLocation": "3914:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:2:6"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3939:0:6"
            },
            "scope": 633,
            "src": "3905:441:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "4375:593:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 342,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "4389:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 343,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "4400:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 194,
                          "src": "4400:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "4389:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d757374206265204f50454e2c20706c6561736520776169742e",
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4411:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_812211b2c5fc6be3f549bae72f3f8298970d8ba136af7580f34e40bb8c0bec5a",
                          "typeString": "literal_string \"Lottery must be OPEN, please wait.\""
                        },
                        "value": "Lottery must be OPEN, please wait."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_812211b2c5fc6be3f549bae72f3f8298970d8ba136af7580f34e40bb8c0bec5a",
                          "typeString": "literal_string \"Lottery must be OPEN, please wait.\""
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4381:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 348,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 354,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4485:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lottery_$633",
                                    "typeString": "contract Lottery"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Lottery_$633",
                                    "typeString": "contract Lottery"
                                  }
                                ],
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4477:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 352,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4477:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4477:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 350,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "4462:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$1066",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 998,
                            "src": "4462:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4462:29:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 357,
                          "name": "chainLinkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "4495:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4462:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742077697468206661756365742e",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4509:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5067d630b9c1d39a0d94a16a7e2493acef03c49048c96e4478fcf9865e927c3d",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet.\""
                        },
                        "value": "Not enough LINK - fill contract with faucet."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5067d630b9c1d39a0d94a16a7e2493acef03c49048c96e4478fcf9865e927c3d",
                          "typeString": "literal_string \"Not enough LINK - fill contract with faucet.\""
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4454:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4454:102:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "4454:102:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 363,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4570:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4570:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 365,
                          "name": "s_lotteryDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 172,
                          "src": "4589:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4570:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f747465727920686173206e6f742066696e69736865642e",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4607:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20509b07c7f6ea07a713cd10df459e6cfd6484908dacadb9ba71641c6549abd7",
                          "typeString": "literal_string \"Lottery has not finished.\""
                        },
                        "value": "Lottery has not finished."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20509b07c7f6ea07a713cd10df459e6cfd6484908dacadb9ba71641c6549abd7",
                          "typeString": "literal_string \"Lottery has not finished.\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4562:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4562:73:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "4562:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 371,
                            "name": "s_players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "4756:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                              "typeString": "address payable[] storage ref"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4756:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4775:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4756:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820706c61796572732e",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4778:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b969b792f5f1cb3152d7c943a7dddf7989facf199339d35319ca8e6d98870222",
                          "typeString": "literal_string \"Not enough players.\""
                        },
                        "value": "Not enough players."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b969b792f5f1cb3152d7c943a7dddf7989facf199339d35319ca8e6d98870222",
                          "typeString": "literal_string \"Not enough players.\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4748:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4748:52:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "4748:52:6"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 378,
                      "name": "s_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "4806:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 379,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "4816:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                          "typeString": "type(enum Lottery.State)"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CALCULATING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 196,
                      "src": "4816:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "src": "4806:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$197",
                      "typeString": "enum Lottery.State"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4806:27:6"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "s_lastLottery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "4839:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "s_lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "4855:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4839:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4839:33:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 388,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4896:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 389,
                        "name": "chainLinkFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4904:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 387,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "4878:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4878:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 391,
                  "nodeType": "ExpressionStatement",
                  "src": "4878:39:6"
                }
              ]
            },
            "functionSelector": "43d726d6",
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "4359:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4364:3:6"
            },
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4375:0:6"
            },
            "scope": 633,
            "src": "4350:618:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              793
            ],
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "5285:146:6",
              "statements": [
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 401,
                      "name": "s_randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "5292:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 402,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "5307:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5292:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "5292:27:6"
                },
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "randomWinner",
                      "nameLocation": "5333:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 421,
                      "src": "5325:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5325:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 407,
                            "name": "s_randomness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "5349:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "expression": {
                              "id": 408,
                              "name": "s_players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "5364:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5364:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5349:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 411,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5348:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5384:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5348:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5325:60:6"
                },
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 415,
                      "name": "s_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "5392:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 416,
                        "name": "s_players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "5403:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 418,
                      "indexExpression": {
                        "id": 417,
                        "name": "randomWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "5413:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5403:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5392:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "5392:34:6"
                }
              ]
            },
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "5204:17:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 399,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5276:8:6"
            },
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "5222:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5222:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "randomNumber",
                  "nameLocation": "5253:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "5245:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5245:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5221:45:6"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5285:0:6"
            },
            "scope": 633,
            "src": "5195:236:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "6030:677:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 426,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "6044:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 427,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "6055:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "6055:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "6044:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d7573742062652043414c43554c4154494e472c20706c6561736520776169742e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6073:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96fa9a1d729ac9ed925831c394b3d499a86e392312cf2a0d03b30e331ec73c38",
                          "typeString": "literal_string \"Lottery must be CALCULATING, please wait.\""
                        },
                        "value": "Lottery must be CALCULATING, please wait."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96fa9a1d729ac9ed925831c394b3d499a86e392312cf2a0d03b30e331ec73c38",
                          "typeString": "literal_string \"Lottery must be CALCULATING, please wait.\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6036:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6036:81:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "6036:81:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 434,
                          "name": "s_winner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "6131:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6151:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6143:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 435,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6143:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6143:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6131:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616464726573732830783030302e2e2e2920636f756c64206e6f742062652077696e6e6572",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6154:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104b0e8a59263fc2b202ba95731841c507b2fd6356e512ad28a39f597d5f2a6a",
                          "typeString": "literal_string \"address(0x000...) could not be winner\""
                        },
                        "value": "address(0x000...) could not be winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104b0e8a59263fc2b202ba95731841c507b2fd6356e512ad28a39f597d5f2a6a",
                          "typeString": "literal_string \"address(0x000...) could not be winner\""
                        }
                      ],
                      "id": 433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6123:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6123:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6123:71:6"
                },
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "6208:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6200:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6200:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 446,
                  "initialValue": {
                    "id": 445,
                    "name": "s_totalLotteryBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 183,
                    "src": "6216:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6200:37:6"
                },
                {
                  "assignments": [
                    448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 448,
                      "mutability": "mutable",
                      "name": "amtFunding",
                      "nameLocation": "6251:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6243:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 447,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6243:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 449,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "6265:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 450,
                            "name": "s_fundingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "6273:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6265:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 452,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6264:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6289:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "6264:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:51:6"
                },
                {
                  "assignments": [
                    457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 457,
                      "mutability": "mutable",
                      "name": "amtWinner",
                      "nameLocation": "6308:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6300:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 456,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6300:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 458,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 444,
                          "src": "6321:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 459,
                          "name": "amtFunding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "6329:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6321:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 461,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6320:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6300:40:6"
                },
                {
                  "expression": {
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 463,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "6346:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 466,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 464,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "6354:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6346:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 467,
                      "name": "amtFunding",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "6366:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6346:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "6346:30:6"
                },
                {
                  "expression": {
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 470,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "6382:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 472,
                      "indexExpression": {
                        "id": 471,
                        "name": "s_winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "6390:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6382:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 473,
                      "name": "amtWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "6403:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6382:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:30:6"
                },
                {
                  "expression": {
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 476,
                      "name": "s_totalLotteryBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "6418:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6442:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6418:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "6418:25:6"
                },
                {
                  "expression": {
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6534:16:6",
                    "subExpression": {
                      "id": 480,
                      "name": "s_players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "6541:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "6534:16:6"
                },
                {
                  "expression": {
                    "id": 484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6658:15:6",
                    "subExpression": {
                      "id": 483,
                      "name": "s_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "6665:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 485,
                  "nodeType": "ExpressionStatement",
                  "src": "6658:15:6"
                },
                {
                  "expression": {
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 486,
                      "name": "s_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "6679:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "6689:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                          "typeString": "type(enum Lottery.State)"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "6689:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "src": "6679:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$197",
                      "typeString": "enum Lottery.State"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6679:22:6"
                }
              ]
            },
            "functionSelector": "4895367b",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundWinner",
            "nameLocation": "6010:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6020:2:6"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6030:0:6"
            },
            "scope": 633,
            "src": "6001:706:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "6765:192:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 498,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "6779:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 501,
                          "indexExpression": {
                            "expression": {
                              "id": 499,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6787:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6787:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6779:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6801:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6779:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e6565642066756e647320746f20636c61696d2e",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6803:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a11e6342a9f89be35074a279007c6f2dded486dd7fa92b7d0e9ff98954fc8931",
                          "typeString": "literal_string \"You need funds to claim.\""
                        },
                        "value": "You need funds to claim."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a11e6342a9f89be35074a279007c6f2dded486dd7fa92b7d0e9ff98954fc8931",
                          "typeString": "literal_string \"You need funds to claim.\""
                        }
                      ],
                      "id": 497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6771:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6771:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "6771:59:6"
                },
                {
                  "assignments": [
                    508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 508,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "6844:3:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "6836:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6836:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 513,
                  "initialValue": {
                    "baseExpression": {
                      "id": 509,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "6850:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 512,
                    "indexExpression": {
                      "expression": {
                        "id": 510,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6858:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6858:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6850:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6836:33:6"
                },
                {
                  "expression": {
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 514,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "6875:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 517,
                      "indexExpression": {
                        "expression": {
                          "id": 515,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6883:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6883:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6875:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6897:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6875:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "6875:23:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6935:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6935:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "6946:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 521,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "6904:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$162_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 161,
                      "src": "6904:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6904:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "6904:46:6"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 494,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 777,
                  "src": "6752:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "6752:12:6"
              }
            ],
            "name": "claim",
            "nameLocation": "6737:5:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:2:6"
            },
            "returnParameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6765:0:6"
            },
            "scope": 633,
            "src": "6728:229:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "7062:381:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 542,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "7077:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 543,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "7088:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 195,
                          "src": "7088:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "7077:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374617465206d75737420626520434c4f534544",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7101:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992db5325bfae5e689b19750637c7d3bc47e135d5b7946e9a47600bd6d0186b6",
                          "typeString": "literal_string \"State must be CLOSED\""
                        },
                        "value": "State must be CLOSED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992db5325bfae5e689b19750637c7d3bc47e135d5b7946e9a47600bd6d0186b6",
                          "typeString": "literal_string \"State must be CLOSED\""
                        }
                      ],
                      "id": 541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7068:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7068:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "7068:57:6"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 549,
                      "name": "s_lotteryDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "7131:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 550,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7151:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7151:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 552,
                        "name": "_addTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "7169:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7151:26:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7131:46:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "7131:46:6"
                },
                {
                  "expression": {
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 556,
                      "name": "s_entranceFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "7294:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 557,
                      "name": "_entranceAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "7310:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7294:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 559,
                  "nodeType": "ExpressionStatement",
                  "src": "7294:31:6"
                },
                {
                  "expression": {
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 560,
                      "name": "s_fundingFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "7385:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 561,
                      "name": "_basisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "7400:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7385:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "7385:27:6"
                }
              ]
            },
            "functionSelector": "d0aff937",
            "id": 565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 538,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 680,
                  "src": "7052:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7052:9:6"
              }
            ],
            "name": "setLoterry",
            "nameLocation": "6969:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_addTime",
                  "nameLocation": "6988:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6980:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6980:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "_entranceAmount",
                  "nameLocation": "7006:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6998:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6998:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "_basisPoints",
                  "nameLocation": "7031:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "7023:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7023:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6979:65:6"
            },
            "returnParameters": {
              "id": 540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7062:0:6"
            },
            "scope": 633,
            "src": "6960:483:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 592,
              "nodeType": "Block",
              "src": "7487:132:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 571,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "7502:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 572,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "7513:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CLOSED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 195,
                          "src": "7513:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "7502:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374617465206d75737420626520434c4f534544",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7526:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992db5325bfae5e689b19750637c7d3bc47e135d5b7946e9a47600bd6d0186b6",
                          "typeString": "literal_string \"State must be CLOSED\""
                        },
                        "value": "State must be CLOSED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992db5325bfae5e689b19750637c7d3bc47e135d5b7946e9a47600bd6d0186b6",
                          "typeString": "literal_string \"State must be CLOSED\""
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7493:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7493:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "7493:57:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7570:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7570:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 587,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7605:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Lottery_$633",
                                  "typeString": "contract Lottery"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Lottery_$633",
                                  "typeString": "contract Lottery"
                                }
                              ],
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7597:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 585,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7597:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7597:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 583,
                            "name": "LINK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 852,
                            "src": "7582:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$1066",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 998,
                          "src": "7582:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7582:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 578,
                        "name": "LINK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 852,
                        "src": "7556:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$1066",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1043,
                      "src": "7556:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7556:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 591,
                  "nodeType": "ExpressionStatement",
                  "src": "7556:56:6"
                }
              ]
            },
            "functionSelector": "8dc654a2",
            "id": 593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 568,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 567,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 680,
                  "src": "7477:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7477:9:6"
              }
            ],
            "name": "withdrawLink",
            "nameLocation": "7455:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7467:2:6"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7487:0:6"
            },
            "scope": 633,
            "src": "7446:173:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "7960:262:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$197",
                          "typeString": "enum Lottery.State"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 601,
                          "name": "s_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "7974:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 602,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "7985:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                              "typeString": "type(enum Lottery.State)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "CALCULATING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 196,
                          "src": "7985:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$197",
                            "typeString": "enum Lottery.State"
                          }
                        },
                        "src": "7974:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206d7573742062652043414c43554c4154494e472c20706c6561736520776169742e",
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8003:43:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96fa9a1d729ac9ed925831c394b3d499a86e392312cf2a0d03b30e331ec73c38",
                          "typeString": "literal_string \"Lottery must be CALCULATING, please wait.\""
                        },
                        "value": "Lottery must be CALCULATING, please wait."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96fa9a1d729ac9ed925831c394b3d499a86e392312cf2a0d03b30e331ec73c38",
                          "typeString": "literal_string \"Lottery must be CALCULATING, please wait.\""
                        }
                      ],
                      "id": 600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7966:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7966:81:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "7966:81:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 609,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8061:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8061:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 611,
                                "name": "s_lotteryDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 172,
                                "src": "8080:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8100:7:6",
                                "subdenomination": "hours",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3600_by_1",
                                  "typeString": "int_const 3600"
                                },
                                "value": "1"
                              },
                              "src": "8080:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 614,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8079:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8061:48:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c657373207468616e20616e20686f757220686173207061737365642e",
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8110:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7981fa0c43ce6854656d1bd82c77bebaa661a58d47c524e121b053c4adb2f2f2",
                          "typeString": "literal_string \"Less than an hour has passed.\""
                        },
                        "value": "Less than an hour has passed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7981fa0c43ce6854656d1bd82c77bebaa661a58d47c524e121b053c4adb2f2f2",
                          "typeString": "literal_string \"Less than an hour has passed.\""
                        }
                      ],
                      "id": 608,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8053:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8053:89:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "8053:89:6"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 619,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "8148:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 622,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 620,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "8156:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8156:7:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8148:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 623,
                      "name": "s_totalLotteryBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "8167:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8148:40:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "8148:40:6"
                },
                {
                  "expression": {
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 626,
                      "name": "s_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "8194:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 627,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "8204:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$197_$",
                          "typeString": "type(enum Lottery.State)"
                        }
                      },
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 195,
                      "src": "8204:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$197",
                        "typeString": "enum Lottery.State"
                      }
                    },
                    "src": "8194:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$197",
                      "typeString": "enum Lottery.State"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "8194:22:6"
                }
              ]
            },
            "functionSelector": "db2e21bc",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 595,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 680,
                  "src": "7937:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7937:9:6"
              },
              {
                "id": 598,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 597,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 777,
                  "src": "7947:12:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "7947:12:6"
              }
            ],
            "name": "emergencyWithdraw",
            "nameLocation": "7910:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7927:2:6"
            },
            "returnParameters": {
              "id": 599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7960:0:6"
            },
            "scope": 633,
            "src": "7901:321:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 634,
        "src": "1587:6637:6",
        "usedErrors": []
      }
    ],
    "src": "32:8194:6"
  },
  "bytecode": "",
  "bytecodeSha1": "4cad6be747788fce9657d3f50e6e4f6049dbc61b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "74": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "75": [
            9668,
            9696,
            true
          ]
        }
      },
      "4": {},
      "6": {
        "Lottery.close": {
          "56": [
            4389,
            4410,
            true
          ],
          "57": [
            4462,
            4507,
            true
          ],
          "58": [
            4570,
            4606,
            true
          ]
        },
        "Lottery.emergencyWithdraw": {
          "67": [
            7974,
            8002,
            true
          ],
          "68": [
            8061,
            8109,
            true
          ]
        },
        "Lottery.enter": {
          "69": [
            3534,
            3555,
            true
          ],
          "70": [
            3607,
            3633,
            true
          ],
          "71": [
            3673,
            3696,
            true
          ],
          "72": [
            3744,
            3765,
            true
          ]
        },
        "Lottery.fundWinner": {
          "59": [
            6044,
            6072,
            true
          ]
        },
        "Lottery.setLoterry": {
          "66": [
            7077,
            7100,
            true
          ]
        },
        "Lottery.start": {
          "61": [
            3953,
            3976,
            true
          ],
          "62": [
            4030,
            4075,
            true
          ],
          "63": [
            4138,
            4171,
            true
          ],
          "64": [
            4216,
            4233,
            false
          ],
          "65": [
            4237,
            4253,
            true
          ]
        },
        "Lottery.withdrawLink": {
          "60": [
            7502,
            7525,
            true
          ]
        },
        "TransferHelper.safeTransferETH": {
          "73": [
            1529,
            1536,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "52": [
            2378,
            2395
          ],
          "53": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "20": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "44": [
            1998,
            2071
          ],
          "45": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "19": [
            712,
            729
          ]
        }
      },
      "3": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "23": [
            9660,
            9732
          ],
          "24": [
            9738,
            9778
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "46": [
            7834,
            7921
          ],
          "48": [
            8663,
            8702
          ],
          "50": [
            8708,
            8747
          ]
        }
      },
      "4": {
        "VRFRequestIDBase.makeRequestId": {
          "49": [
            1518,
            1577
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "47": [
            953,
            1031
          ]
        }
      },
      "6": {
        "Lottery.claim": {
          "16": [
            6771,
            6830
          ],
          "17": [
            6875,
            6898
          ],
          "18": [
            6904,
            6950
          ]
        },
        "Lottery.close": {
          "1": [
            4381,
            4448
          ],
          "2": [
            4454,
            4556
          ],
          "3": [
            4562,
            4635
          ],
          "4": [
            4748,
            4800
          ],
          "5": [
            4806,
            4833
          ],
          "6": [
            4839,
            4872
          ],
          "7": [
            4878,
            4917
          ]
        },
        "Lottery.emergencyWithdraw": {
          "34": [
            7966,
            8047
          ],
          "35": [
            8053,
            8142
          ],
          "36": [
            8148,
            8188
          ],
          "37": [
            8194,
            8216
          ]
        },
        "Lottery.enter": {
          "38": [
            3526,
            3593
          ],
          "39": [
            3599,
            3659
          ],
          "40": [
            3665,
            3730
          ],
          "41": [
            3736,
            3811
          ],
          "42": [
            3817,
            3852
          ],
          "43": [
            3858,
            3896
          ]
        },
        "Lottery.fulfillRandomness": {
          "54": [
            5292,
            5319
          ],
          "55": [
            5392,
            5426
          ]
        },
        "Lottery.fundWinner": {
          "8": [
            6036,
            6117
          ],
          "9": [
            6123,
            6194
          ],
          "10": [
            6346,
            6376
          ],
          "11": [
            6382,
            6412
          ],
          "12": [
            6418,
            6443
          ],
          "13": [
            6534,
            6550
          ],
          "14": [
            6658,
            6673
          ],
          "15": [
            6679,
            6701
          ]
        },
        "Lottery.setLoterry": {
          "30": [
            7068,
            7125
          ],
          "31": [
            7131,
            7177
          ],
          "32": [
            7294,
            7325
          ],
          "33": [
            7385,
            7412
          ]
        },
        "Lottery.start": {
          "25": [
            3945,
            4016
          ],
          "26": [
            4022,
            4124
          ],
          "27": [
            4130,
            4202
          ],
          "28": [
            4208,
            4315
          ],
          "29": [
            4321,
            4341
          ]
        },
        "Lottery.withdrawLink": {
          "21": [
            7493,
            7550
          ],
          "22": [
            7556,
            7612
          ]
        },
        "TransferHelper.safeTransferETH": {
          "51": [
            1521,
            1576
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ReentrancyGuard",
    "TransferHelper",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.4.0/VRFRequestIDBase"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1587:6637:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:27;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;2102:27:6;;;;;;;;1946:23;;;;;;;;;;-1:-1:-1;1946:23:6;;;;-1:-1:-1;;;;;1946:23:6;;;;;;-1:-1:-1;;;;;360:32:7;;;342:51;;330:2;315:18;1946:23:6;196:203:7;4350:618:6;;;;;;;;;;;;;:::i;:::-;;6001:706;;;;;;;;;;;;;:::i;6728:229::-;;;;;;;;;;;;;:::i;1743:32::-;;;;;;;;;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;7446:173:6;;;;;;;;;;;;;:::i;9576:207:3:-;;;;;;;;;;-1:-1:-1;9576:207:3;;;;;:::i;:::-;;:::i;1974:27:6:-;;;;;;;;;;;;;;;;1710:28;;;;;;;;;;;;;;;;1812:34;;;;;;;;;;-1:-1:-1;1812:34:6;;;;;:::i;:::-;;:::i;1780:28::-;;;;;;;;;;;;;;;;3905:441;;;;;;;;;;;;;:::i;2062:36::-;;;;;;;;;;;;;;;;6960:483;;;;;;;;;;-1:-1:-1;6960:483:6;;;;;:::i;:::-;;:::i;7901:321::-;;;;;;;;;;;;;:::i;2347:42::-;;;;;;;;;;-1:-1:-1;2347:42:6;;;;;:::i;:::-;;;;;;;;;;;;;;3488:413;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;2432:20:6:-;;;;;;;;;;-1:-1:-1;2432:20:6;;;;;;;;;;;;;;;:::i;4350:618::-;4400:10;4389:7;;;;:21;;;;;;;;:::i;:::-;;4381:67;;;;-1:-1:-1;;;4381:67:6;;;;;;;:::i;:::-;;;;;;;;;4462:29;;-1:-1:-1;;;4462:29:6;;4485:4;4462:29;;;342:51:7;4495:12:6;;4462:4;-1:-1:-1;;;;;4462:14:6;;;;315:18:7;;4462:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;4454:102;;;;-1:-1:-1;;;4454:102:6;;;;;;;:::i;:::-;4589:17;;4570:15;:36;;4562:73;;;;-1:-1:-1;;;4562:73:6;;3359:2:7;4562:73:6;;;3341:21:7;3398:2;3378:18;;;3371:30;3437:27;3417:18;;;3410:55;3482:18;;4562:73:6;3157:349:7;4562:73:6;4756:9;:16;4775:1;-1:-1:-1;4748:52:6;;;;-1:-1:-1;;;4748:52:6;;3713:2:7;4748:52:6;;;3695:21:7;3752:2;3732:18;;;3725:30;-1:-1:-1;;;3771:18:7;;;3764:49;3830:18;;4748:52:6;3511:343:7;4748:52:6;4806:7;:27;;-1:-1:-1;;4806:27:6;4816:17;4806:27;;;4855:17;;4839:13;:33;4878:39;4896:7;4904:12;4878:17;:39::i;:::-;;4350:618::o;6001:706::-;6055:17;6044:7;;;;:28;;;;;;;;:::i;:::-;;6036:81;;;;-1:-1:-1;;;6036:81:6;;;;;;;:::i;:::-;6131:8;;-1:-1:-1;;;;;6131:8:6;6123:71;;;;-1:-1:-1;;;6123:71:6;;4471:2:7;6123:71:6;;;4453:21:7;4510:2;4490:18;;;4483:30;4549:34;4529:18;;;4522:62;-1:-1:-1;;;4600:18:7;;;4593:35;4645:19;;6123:71:6;4269:401:7;6123:71:6;6216:21;;6273:12;;6200:13;;6289:5;;6265:20;;6216:21;6265:20;:::i;:::-;6264:30;;;;:::i;:::-;6243:51;-1:-1:-1;6300:17:6;6321:18;6243:51;6321:5;:18;:::i;:::-;6300:40;;6366:10;6346:7;:16;6354:7;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;1036:85;6354:7:6;-1:-1:-1;;;;;6346:16:6;-1:-1:-1;;;;;6346:16:6;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;6390:8:6;;-1:-1:-1;;;;;6390:8:6;6382:17;;;;:7;:17;;;;;:30;;6403:9;;6382:17;:30;;6403:9;;6382:30;:::i;:::-;;;;-1:-1:-1;;6442:1:6;6418:21;:25;;;6534:16;;6541:9;;6534:16;:::i;:::-;-1:-1:-1;;6665:8:6;6658:15;;-1:-1:-1;;;;;;6658:15:6;;;-1:-1:-1;6679:7:6;:22;;-1:-1:-1;;6679:22:6;-1:-1:-1;6679:22:6;;;6001:706::o;6728:229::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;5702:2:7;2317:63:1;;;5684:21:7;5741:2;5721:18;;;5714:30;5780:33;5760:18;;;5753:61;5831:18;;2317:63:1;5500:355:7;2317:63:1;1744:1;2455:18;;6787:10:6::1;6801:1;6779:19:::0;;;:7:::1;:19;::::0;;;;;6771:59:::1;;;::::0;-1:-1:-1;;;6771:59:6;;6062:2:7;6771:59:6::1;::::0;::::1;6044:21:7::0;6101:2;6081:18;;;6074:30;6140:26;6120:18;;;6113:54;6184:18;;6771:59:6::1;5860:348:7::0;6771:59:6::1;6858:10;6836:11;6850:19:::0;;;:7:::1;:19;::::0;;;;;;6875:23;;;6850:19;6904:46:::1;::::0;6850:19;6904:30:::1;:46::i;:::-;-1:-1:-1::0;1701:1:1;2628:7;:22;6728:229:6:o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;7446:173:6:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7513:12:6::1;7502:7;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;7493:57;;;::::0;-1:-1:-1;;;7493:57:6;;6776:2:7;7493:57:6::1;::::0;::::1;6758:21:7::0;6815:2;6795:18;;;6788:30;-1:-1:-1;;;6834:18:7;;;6827:50;6894:18;;7493:57:6::1;6574:344:7::0;7493:57:6::1;7582:29;::::0;-1:-1:-1;;;7582:29:6;;7605:4:::1;7582:29;::::0;::::1;342:51:7::0;7556:4:6::1;-1:-1:-1::0;;;;;7556:13:6::1;::::0;::::1;::::0;7570:10:::1;::::0;7556:13;;7582:14:::1;::::0;315:18:7;;7582:29:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7556:56;::::0;-1:-1:-1;;;;;;7556:56:6::1;::::0;;;;;;-1:-1:-1;;;;;7115:32:7;;;7556:56:6::1;::::0;::::1;7097:51:7::0;7164:18;;;7157:34;7070:18;;7556:56:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;9576:207:3:-:0;9668:10;-1:-1:-1;;;;;9682:14:3;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:3;;7686:2:7;9660:72:3;;;7668:21:7;7725:2;7705:18;;;7698:30;7764:33;7744:18;;;7737:61;7815:18;;9660:72:3;7484:355:7;9660:72:3;9738:40;9756:9;9767:10;9738:17;:40::i;:::-;9576:207;;:::o;1812:34:6:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1812:34:6;;-1:-1:-1;1812:34:6;:::o;3905:441::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3964:12:6::1;3953:7;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;3945:71;;;::::0;-1:-1:-1;;;3945:71:6;;8046:2:7;3945:71:6::1;::::0;::::1;8028:21:7::0;8085:2;8065:18;;;8058:30;8124:34;8104:18;;;8097:62;-1:-1:-1;;;8175:18:7;;;8168:34;8219:19;;3945:71:6::1;7844:400:7::0;3945:71:6::1;4030:29;::::0;-1:-1:-1;;;4030:29:6;;4053:4:::1;4030:29;::::0;::::1;342:51:7::0;4063:12:6::1;::::0;4030:4:::1;-1:-1:-1::0;;;;;4030:14:6::1;::::0;::::1;::::0;315:18:7;;4030:29:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;4022:102;;;;-1:-1:-1::0;;;4022:102:6::1;;;;;;;:::i;:::-;4158:13;;4138:17;;:33;4130:72;;;::::0;-1:-1:-1;;;4130:72:6;;8451:2:7;4130:72:6::1;::::0;::::1;8433:21:7::0;8490:2;8470:18;;;8463:30;8529:29;8509:18;;;8502:57;8576:18;;4130:72:6::1;8249:351:7::0;4130:72:6::1;4232:1;4216:13;;:17;:37;;;;;4252:1;4237:12;;:16;4216:37;4208:107;;;::::0;-1:-1:-1;;;4208:107:6;;8807:2:7;4208:107:6::1;::::0;::::1;8789:21:7::0;8846:2;8826:18;;;8819:30;8885:34;8865:18;;;8858:62;8956:28;8936:18;;;8929:56;9002:19;;4208:107:6::1;8605:422:7::0;4208:107:6::1;4321:7;:20:::0;;-1:-1:-1;;4321:20:6::1;::::0;;3905:441::o;6960:483::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7088:12:6::1;7077:7;::::0;::::1;;:23;::::0;::::1;;;;;;:::i;:::-;;7068:57;;;::::0;-1:-1:-1;;;7068:57:6;;6776:2:7;7068:57:6::1;::::0;::::1;6758:21:7::0;6815:2;6795:18;;;6788:30;-1:-1:-1;;;6834:18:7;;;6827:50;6894:18;;7068:57:6::1;6574:344:7::0;7068:57:6::1;7151:26;7169:8:::0;7151:15:::1;:26;:::i;:::-;7131:17;:46:::0;7294:13:::1;:31:::0;;;;7385:12:::1;:27:::0;-1:-1:-1;6960:483:6:o;7901:321::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1744:1:1::1;2325:7:::0;::::1;:19:::0;2317:63:::1;;;::::0;-1:-1:-1;;;2317:63:1;;5702:2:7;2317:63:1::1;::::0;::::1;5684:21:7::0;5741:2;5721:18;;;5714:30;5780:33;5760:18;;;5753:61;5831:18;;2317:63:1::1;5500:355:7::0;2317:63:1::1;1744:1;2455:18:::0;;;7974:7:6::2;::::0;::::2;;:28;::::0;::::2;;;;;;:::i;:::-;;7966:81;;;;-1:-1:-1::0;;;7966:81:6::2;;;;;;;:::i;:::-;8080:17;::::0;:27:::2;::::0;8100:7:::2;8080:27;:::i;:::-;8061:15;:48;8053:89;;;::::0;-1:-1:-1;;;8053:89:6;;9234:2:7;8053:89:6::2;::::0;::::2;9216:21:7::0;9273:2;9253:18;;;9246:30;9312:31;9292:18;;;9285:59;9361:18;;8053:89:6::2;9032:353:7::0;8053:89:6::2;8167:21;;8148:7;:16;8156:7;1108:6:0::0;;-1:-1:-1;;;;;1108:6:0;;1036:85;8156:7:6::2;-1:-1:-1::0;;;;;8148:16:6::2;::::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;8148:16:6;:40;8194:7:::2;:22:::0;;-1:-1:-1;;8194:22:6::2;8204:12;8194:22:::0;;::::2;::::0;;;2628:7:1::1;:22:::0;7901:321:6:o;3488:413::-;3545:10;3534:7;;;;:21;;;;;;;;:::i;:::-;;3526:67;;;;-1:-1:-1;;;3526:67:6;;;;;;;:::i;:::-;3620:13;;3607:9;:26;3599:60;;;;-1:-1:-1;;;3599:60:6;;9592:2:7;3599:60:6;;;9574:21:7;9631:2;9611:18;;;9604:30;-1:-1:-1;;;9650:18:7;;;9643:52;9712:18;;3599:60:6;9390:346:7;3599:60:6;3673:9;:16;3693:3;-1:-1:-1;3673:23:6;3665:65;;;;-1:-1:-1;;;3665:65:6;;9943:2:7;3665:65:6;;;9925:21:7;9982:2;9962:18;;;9955:30;10021:32;10001:18;;;9994:60;10071:18;;3665:65:6;9741:354:7;3665:65:6;1108:6:0;;-1:-1:-1;;;;;1108:6:0;3744:10:6;:21;3736:75;;;;-1:-1:-1;;;3736:75:6;;10302:2:7;3736:75:6;;;10284:21:7;10341:2;10321:18;;;10314:30;10380:34;10360:18;;;10353:62;-1:-1:-1;;;10431:18:7;;;10424:40;10481:19;;3736:75:6;10100:406:7;3736:75:6;3817:9;:35;;;;;;;-1:-1:-1;3817:35:6;;;;;;;-1:-1:-1;;;;;;3817:35:6;3840:10;3817:35;;;3883:13;;3858:21;:38;;3883:13;;3858:21;;:38;;3883:13;;3858:38;:::i;:::-;;;;-1:-1:-1;;3488:413:6:o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10713:2:7;1998:73:0::1;::::0;::::1;10695:21:7::0;10752:2;10732:18;;;10725:30;10791:34;10771:18;;;10764:62;-1:-1:-1;;;10842:18:7;;;10835:36;10888:19;;1998:73:0::1;10511:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;7732:1020:3:-:0;7809:17;7834:4;-1:-1:-1;;;;;7834:20:3;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;11092:25:7;;;11148:2;11133:18;;11126:34;11080:2;11065:18;;10918:248;7877:43:3;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8152:15:3;8235:16;;;;;;;;;;;;978:51:4;;;;;13285:25:7;;;13326:18;;;13319:34;;;8228:4:3;13369:18:7;;;13362:60;13438:18;;;;13431:34;;;978:51:4;;;;;;;;;;13257:19:7;;;;978:51:4;;;968:62;;;;;;;;;8682:16:3;;;;;;;:20;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;;;:39;;;;1535:41:4;;;;;13633:19:7;;;13668:12;;;13661:28;;;1535:41:4;;;;;;;;;13705:12:7;;;;1535:41:4;;;1525:52;;;;;8708:39:3;7732:1020;-1:-1:-1;;;;7732:1020:3:o;1391:192:6:-;1498:12;;;1460;1498;;;;;;;;;-1:-1:-1;;;;;1477:7:6;;;1491:5;;1477:34;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:52;;;1529:7;1521:55;;;;-1:-1:-1;;;1521:55:6;;12603:2:7;1521:55:6;;;12585:21:7;12642:2;12622:18;;;12615:30;12681:34;12661:18;;;12654:62;-1:-1:-1;;;12732:18:7;;;12725:33;12775:19;;1521:55:6;12401:399:7;1521:55:6;1449:134;1391:192;;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;5195:236:6:-;5292:12;:27;;;5364:9;:16;5325:20;;5349:31;;5307:12;5349:31;:::i;:::-;5348:37;;5384:1;5348:37;:::i;:::-;5325:60;;5403:9;5413:12;5403:23;;;;;;;;:::i;:::-;;;;;;;;;;;5392:8;:34;;-1:-1:-1;;;;;;5392:34:6;-1:-1:-1;;;;;5403:23:6;;;5392:34;;;;;;-1:-1:-1;;;5195:236:6:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;404:248:7:-;472:6;480;533:2;521:9;512:7;508:23;504:32;501:52;;;549:1;546;539:12;501:52;-1:-1:-1;;572:23:7;;;642:2;627:18;;;614:32;;-1:-1:-1;404:248:7:o;657:180::-;716:6;769:2;757:9;748:7;744:23;740:32;737:52;;;785:1;782;775:12;737:52;-1:-1:-1;808:23:7;;657:180;-1:-1:-1;657:180:7:o;1066:316::-;1143:6;1151;1159;1212:2;1200:9;1191:7;1187:23;1183:32;1180:52;;;1228:1;1225;1218:12;1180:52;-1:-1:-1;;1251:23:7;;;1321:2;1306:18;;1293:32;;-1:-1:-1;1372:2:7;1357:18;;;1344:32;;1066:316;-1:-1:-1;1066:316:7:o;1387:286::-;1446:6;1499:2;1487:9;1478:7;1474:23;1470:32;1467:52;;;1515:1;1512;1505:12;1467:52;1541:23;;-1:-1:-1;;;;;1593:31:7;;1583:42;;1573:70;;1639:1;1636;1629:12;1573:70;1662:5;1387:286;-1:-1:-1;;;1387:286:7:o;1678:127::-;1739:10;1734:3;1730:20;1727:1;1720:31;1770:4;1767:1;1760:15;1794:4;1791:1;1784:15;1810:337;1951:2;1936:18;;1984:1;1973:13;;1963:144;;2029:10;2024:3;2020:20;2017:1;2010:31;2064:4;2061:1;2054:15;2092:4;2089:1;2082:15;1963:144;2116:25;;;1810:337;:::o;2152:398::-;2354:2;2336:21;;;2393:2;2373:18;;;2366:30;2432:34;2427:2;2412:18;;2405:62;-1:-1:-1;;;2498:2:7;2483:18;;2476:32;2540:3;2525:19;;2152:398::o;2555:184::-;2625:6;2678:2;2666:9;2657:7;2653:23;2649:32;2646:52;;;2694:1;2691;2684:12;2646:52;-1:-1:-1;2717:16:7;;2555:184;-1:-1:-1;2555:184:7:o;2744:408::-;2946:2;2928:21;;;2985:2;2965:18;;;2958:30;3024:34;3019:2;3004:18;;2997:62;-1:-1:-1;;;3090:2:7;3075:18;;3068:42;3142:3;3127:19;;2744:408::o;3859:405::-;4061:2;4043:21;;;4100:2;4080:18;;;4073:30;4139:34;4134:2;4119:18;;4112:62;-1:-1:-1;;;4205:2:7;4190:18;;4183:39;4254:3;4239:19;;3859:405::o;4675:127::-;4736:10;4731:3;4727:20;4724:1;4717:31;4767:4;4764:1;4757:15;4791:4;4788:1;4781:15;4807:168;4847:7;4913:1;4909;4905:6;4901:14;4898:1;4895:21;4890:1;4883:9;4876:17;4872:45;4869:71;;;4920:18;;:::i;:::-;-1:-1:-1;4960:9:7;;4807:168::o;4980:127::-;5041:10;5036:3;5032:20;5029:1;5022:31;5072:4;5069:1;5062:15;5096:4;5093:1;5086:15;5112:120;5152:1;5178;5168:35;;5183:18;;:::i;:::-;-1:-1:-1;5217:9:7;;5112:120::o;5237:125::-;5277:4;5305:1;5302;5299:8;5296:34;;;5310:18;;:::i;:::-;-1:-1:-1;5347:9:7;;5237:125::o;5367:128::-;5407:3;5438:1;5434:6;5431:1;5428:13;5425:39;;;5444:18;;:::i;:::-;-1:-1:-1;5480:9:7;;5367:128::o;6213:356::-;6415:2;6397:21;;;6434:18;;;6427:30;6493:34;6488:2;6473:18;;6466:62;6560:2;6545:18;;6213:356::o;7202:277::-;7269:6;7322:2;7310:9;7301:7;7297:23;7293:32;7290:52;;;7338:1;7335;7328:12;7290:52;7370:9;7364:16;7423:5;7416:13;7409:21;7402:5;7399:32;7389:60;;7445:1;7442;7435:12;11171:258;11243:1;11253:113;11267:6;11264:1;11261:13;11253:113;;;11343:11;;;11337:18;11324:11;;;11317:39;11289:2;11282:10;11253:113;;;11384:6;11381:1;11378:13;11375:48;;;11419:1;11410:6;11405:3;11401:16;11394:27;11375:48;;11171:258;;;:::o;11434:551::-;11666:1;11662;11657:3;11653:11;11649:19;11641:6;11637:32;11626:9;11619:51;11706:6;11701:2;11690:9;11686:18;11679:34;11749:2;11744;11733:9;11729:18;11722:30;11600:4;11781:6;11775:13;11824:6;11819:2;11808:9;11804:18;11797:34;11840:67;11900:6;11894:3;11883:9;11879:19;11874:2;11866:6;11862:15;11840:67;:::i;:::-;11968:2;11947:15;-1:-1:-1;;11943:29:7;11928:45;;;;11975:3;11924:55;;11434:551;-1:-1:-1;;;;11434:551:7:o;12122:274::-;12251:3;12289:6;12283:13;12305:53;12351:6;12346:3;12339:4;12331:6;12327:17;12305:53;:::i;:::-;12374:16;;;;;12122:274;-1:-1:-1;;12122:274:7:o;12805:112::-;12837:1;12863;12853:35;;12868:18;;:::i;:::-;-1:-1:-1;12902:9:7;;12805:112::o;12922:127::-;12983:10;12978:3;12974:20;12971:1;12964:31;13014:4;13011:1;13004:15;13038:4;13035:1;13028:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1587,
    8224
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA2EAACAC GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD0AFF937 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD0AFF937 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xF9122E60 EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA2EAACAC EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xAE771F6B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xBC153EDB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xC7F0E36B EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x639A732E GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x639A732E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xA069C0E9 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F998AFB EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x3DC452E1 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x4895367B EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1C7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x183 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x7ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x183 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x823 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x9AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0xA5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x143F JUMP JUMPDEST PUSH2 0xCA4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0xD44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x337 CALLDATASIZE PUSH1 0x4 PUSH2 0x146B JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0xE9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B0 PUSH2 0x36C CALLDATASIZE PUSH1 0x4 PUSH2 0x146B JUMP JUMPDEST PUSH2 0x103B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x38B SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B1 PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x151B JUMP JUMPDEST LT ISZERO PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F747465727920686173206E6F742066696E69736865642E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 LT PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737BA1032B737BAB3B410383630BCB2B93997 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SSTORE PUSH2 0x596 PUSH32 0x0 PUSH32 0x0 PUSH2 0x10D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B2 PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x635 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464726573732830783030302E2E2E2920636F756C64206E6F742062652077 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x34B73732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x64C SWAP1 DUP5 PUSH2 0x15DF JUMP JUMPDEST PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x1614 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x664 DUP3 DUP5 PUSH2 0x1628 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xB PUSH1 0x0 PUSH2 0x67D PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6DB SWAP1 DUP5 SWAP1 PUSH2 0x163F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH2 0x6F3 SWAP1 PUSH1 0x6 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E6565642066756E647320746F20636C61696D2E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x7E5 SWAP1 DUP3 PUSH2 0x124D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH2 0x821 PUSH1 0x0 PUSH2 0x131B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH2 0x866 PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185D19481B5D5CDD0818994810D313D4D151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x987 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xA2D DUP3 DUP3 PUSH2 0x136D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA9E JUMPI PUSH2 0xA9E PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C6F7474657279206D75737420626520434C4F5345442C20706C656173652077 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30B4BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x151B JUMP JUMPDEST LT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD GT PUSH2 0xC12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F74746572792068617320746F206C617374206C6F6E6765722E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0xC26 JUMPI POP PUSH1 0x0 PUSH1 0x8 SLOAD GT JUMPDEST PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45697468657220656E7472616E63652066656520616E642066756E64696E6720 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666565206861766520746F2062652061626F7665206365726F2E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH2 0xCE7 PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185D19481B5D5CDD0818994810D313D4D151 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xD35 DUP4 TIMESTAMP PUSH2 0x163F JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x2 DUP1 DUP1 SSTORE PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDDB JUMPI PUSH2 0xDDB PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE07 SWAP1 PUSH2 0xE10 PUSH2 0x163F JUMP JUMPDEST TIMESTAMP GT PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C657373207468616E20616E20686F757220686173207061737365642E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xB PUSH1 0x0 PUSH2 0xE6E PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEB6 JUMPI PUSH2 0xEB6 PUSH2 0x149B JUMP JUMPDEST EQ PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x14D9 JUMP JUMPDEST PUSH1 0x3 SLOAD CALLVALUE EQ PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x283632B0B9B2961039B2B732103C3C1026A0AA24A197 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x64 LT ISZERO PUSH2 0xF70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756E207061727469636970616E7427732063617061636974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E65722063616E206E6F7420706172746963697061746520696E20746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x10102637BA3A32B93C97 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x1034 SWAP1 DUP5 SWAP1 PUSH2 0x163F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CE SWAP1 PUSH2 0x1657 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x596 DUP2 PUSH2 0x131B JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1143 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0x120D SWAP1 PUSH1 0x1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12B4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x131151 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1382 SWAP1 DUP4 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x138D SWAP1 PUSH1 0x1 PUSH2 0x163F JUMP JUMPDEST SWAP1 POP PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x13A2 JUMPI PUSH2 0x13A2 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x596 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1400 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13EC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0x14D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F7474657279206D757374206265204F50454E2C20706C6561736520776169 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3A17 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x152D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x3BB4BA34103330BAB1B2BA17 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C6F7474657279206D7573742062652043414C43554C4154494E472C20706C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x30B9B2903BB0B4BA17 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15F9 JUMPI PUSH2 0x15F9 PUSH2 0x15C9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1623 JUMPI PUSH2 0x1623 PUSH2 0x15FE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x163A JUMPI PUSH2 0x163A PUSH2 0x15C9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1652 JUMPI PUSH2 0x1652 PUSH2 0x15C9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16B1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16D8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1711 DUP2 PUSH1 0x80 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16AE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x80 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1739 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16AE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1752 JUMPI PUSH2 0x1752 PUSH2 0x15FE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0x23 0x4D 0x2D 0xC8 0xD6 PUSH30 0x9BFC338E6F751B87C78C8EB1DF4BA2544FA856D776FA3A45D664736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "LT",
      "path": "6"
    },
    "9": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x135"
    },
    "12": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "13": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "SHR",
      "path": "6"
    },
    "19": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "20": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA2EAACAC"
    },
    "25": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "GT",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "30": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "31": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD0AFF937"
    },
    "36": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "GT",
      "path": "6"
    },
    "37": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "41": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "42": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xD0AFF937"
    },
    "47": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "48": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E7"
    },
    "51": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "52": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "53": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDB2E21BC"
    },
    "58": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "59": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x307"
    },
    "62": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "63": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "64": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE3D670D7"
    },
    "69": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "70": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "73": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "74": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "75": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xE97DCB62"
    },
    "80": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "81": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x349"
    },
    "84": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "85": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "86": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "92": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x351"
    },
    "95": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "96": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "97": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF9122E60"
    },
    "102": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x371"
    },
    "106": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "107": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "REVERT",
      "path": "6"
    },
    "111": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA2EAACAC"
    },
    "118": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "119": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x270"
    },
    "122": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "123": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "124": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xAE771F6B"
    },
    "129": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "130": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x286"
    },
    "133": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "134": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "135": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBC153EDB"
    },
    "140": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A6"
    },
    "144": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "145": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "146": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xBE9A6555"
    },
    "151": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BC"
    },
    "155": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "156": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "157": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xC7F0E36B"
    },
    "162": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1"
    },
    "166": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "167": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "REVERT",
      "path": "6"
    },
    "171": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "172": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "173": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x639A732E"
    },
    "178": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "GT",
      "path": "6"
    },
    "179": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD"
    },
    "182": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "183": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "184": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x639A732E"
    },
    "189": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "190": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1DC"
    },
    "193": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "194": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "195": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "200": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "201": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F2"
    },
    "204": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "205": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "206": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "211": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "212": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x207"
    },
    "215": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "216": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "217": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DC654A2"
    },
    "222": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "223": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x225"
    },
    "226": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "227": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "228": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x94985DDD"
    },
    "233": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "234": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23A"
    },
    "237": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "238": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "239": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA069C0E9"
    },
    "244": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "245": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25A"
    },
    "248": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "249": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "252": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "REVERT",
      "path": "6"
    },
    "253": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "254": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "255": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x2F998AFB"
    },
    "260": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "261": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A"
    },
    "264": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "265": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "266": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3DC452E1"
    },
    "271": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "272": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163"
    },
    "275": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "276": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "277": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x43D726D6"
    },
    "282": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "283": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B"
    },
    "286": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "287": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "288": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4895367B"
    },
    "293": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "294": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B2"
    },
    "297": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "298": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "299": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4E71D92D"
    },
    "304": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "EQ",
      "path": "6"
    },
    "305": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C7"
    },
    "308": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "309": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "310": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "312": {
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "DUP1",
      "path": "6"
    },
    "313": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1587,
        8224
      ],
      "op": "REVERT",
      "path": "6"
    },
    "314": {
      "offset": [
        2102,
        2129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "315": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "316": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "DUP1",
      "path": "6"
    },
    "317": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "318": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146"
    },
    "321": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "322": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "324": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "DUP1",
      "path": "6"
    },
    "325": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "REVERT",
      "path": "6"
    },
    "326": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "327": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "POP",
      "path": "6"
    },
    "328": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "331": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xA"
    },
    "333": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "334": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "DUP2",
      "path": "6"
    },
    "335": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "JUMP",
      "path": "6"
    },
    "336": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "337": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "339": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "340": {
      "op": "SWAP1"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "MSTORE"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "345": {
      "op": "ADD"
    },
    "346": {
      "offset": [
        2102,
        2129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "347": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "349": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "350": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "DUP1",
      "path": "6"
    },
    "351": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "352": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "SUB",
      "path": "6"
    },
    "353": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "354": {
      "fn": null,
      "offset": [
        2102,
        2129
      ],
      "op": "RETURN",
      "path": "6"
    },
    "355": {
      "offset": [
        1946,
        1969
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "356": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "357": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "DUP1",
      "path": "6"
    },
    "358": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "359": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16F"
    },
    "362": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "363": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "365": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "DUP1",
      "path": "6"
    },
    "366": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "REVERT",
      "path": "6"
    },
    "367": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "368": {
      "op": "POP"
    },
    "369": {
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "371": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "372": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "375": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "382": {
      "op": "SHL"
    },
    "383": {
      "op": "SUB"
    },
    "384": {
      "offset": [
        1946,
        1969
      ],
      "op": "AND",
      "path": "6"
    },
    "385": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "DUP2",
      "path": "6"
    },
    "386": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "JUMP",
      "path": "6"
    },
    "387": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "388": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "390": {
      "fn": null,
      "offset": [
        1946,
        1969
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "op": "SWAP1"
    },
    "400": {
      "op": "SWAP2"
    },
    "401": {
      "op": "AND"
    },
    "402": {
      "op": "DUP2"
    },
    "403": {
      "op": "MSTORE"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "406": {
      "op": "ADD"
    },
    "407": {
      "offset": [
        1946,
        1969
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "410": {
      "op": "JUMP"
    },
    "411": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "412": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "413": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "414": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "415": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7"
    },
    "418": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "419": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "421": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "422": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "423": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "424": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "POP",
      "path": "6"
    },
    "425": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "428": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "431": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "432": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "433": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "STOP",
      "path": "6"
    },
    "434": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "435": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "436": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "DUP1",
      "path": "6"
    },
    "437": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "438": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "442": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "444": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "DUP1",
      "path": "6"
    },
    "445": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "REVERT",
      "path": "6"
    },
    "446": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "447": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "POP",
      "path": "6"
    },
    "448": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "451": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x599"
    },
    "454": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "455": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "456": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "457": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "DUP1",
      "path": "6"
    },
    "458": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "459": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "463": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "465": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "DUP1",
      "path": "6"
    },
    "466": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "REVERT",
      "path": "6"
    },
    "467": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "468": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "POP",
      "path": "6"
    },
    "469": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "472": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x715"
    },
    "475": {
      "fn": "Lottery.claim",
      "jump": "i",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMP",
      "path": "6"
    },
    "476": {
      "offset": [
        1743,
        1775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "477": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "478": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "DUP1",
      "path": "6"
    },
    "479": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "480": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1E8"
    },
    "483": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "484": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "486": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "DUP1",
      "path": "6"
    },
    "487": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "REVERT",
      "path": "6"
    },
    "488": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "489": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "POP",
      "path": "6"
    },
    "490": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "493": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "495": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "496": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "DUP2",
      "path": "6"
    },
    "497": {
      "fn": "Lottery.claim",
      "offset": [
        1743,
        1775
      ],
      "op": "JUMP",
      "path": "6"
    },
    "498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "502": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FE"
    },
    "505": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "509": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "510": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "511": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "515": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7ED"
    },
    "518": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "519": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "522": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x213"
    },
    "526": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "527": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "529": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "531": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "535": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "545": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "548": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "549": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "550": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "551": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "DUP1",
      "path": "6"
    },
    "552": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "553": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x231"
    },
    "556": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "557": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "559": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "DUP1",
      "path": "6"
    },
    "560": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "REVERT",
      "path": "6"
    },
    "561": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "562": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "POP",
      "path": "6"
    },
    "563": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "566": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x823"
    },
    "569": {
      "fn": "Lottery.withdrawLink",
      "jump": "i",
      "offset": [
        7446,
        7619
      ],
      "op": "JUMP",
      "path": "6"
    },
    "570": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "571": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "572": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "574": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x246"
    },
    "577": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "578": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "580": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "3"
    },
    "581": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "REVERT",
      "path": "3"
    },
    "582": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "583": {
      "op": "POP"
    },
    "584": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B0"
    },
    "587": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "590": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "591": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "593": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1404"
    },
    "596": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "3"
    },
    "597": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "598": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9AB"
    },
    "601": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "3"
    },
    "602": {
      "offset": [
        1974,
        2001
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "603": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "604": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "DUP1",
      "path": "6"
    },
    "605": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "606": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x266"
    },
    "609": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "610": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "612": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "DUP1",
      "path": "6"
    },
    "613": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "REVERT",
      "path": "6"
    },
    "614": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "615": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "POP",
      "path": "6"
    },
    "616": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "619": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "621": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "622": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "DUP2",
      "path": "6"
    },
    "623": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1974,
        2001
      ],
      "op": "JUMP",
      "path": "6"
    },
    "624": {
      "offset": [
        1710,
        1738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "625": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "626": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "DUP1",
      "path": "6"
    },
    "627": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "628": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27C"
    },
    "631": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "632": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "634": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "DUP1",
      "path": "6"
    },
    "635": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "REVERT",
      "path": "6"
    },
    "636": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "637": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "POP",
      "path": "6"
    },
    "638": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "641": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "643": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "644": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "DUP2",
      "path": "6"
    },
    "645": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1710,
        1738
      ],
      "op": "JUMP",
      "path": "6"
    },
    "646": {
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "648": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "649": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "650": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x292"
    },
    "653": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "654": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "656": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "657": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "REVERT",
      "path": "6"
    },
    "658": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x183"
    },
    "663": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1"
    },
    "666": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "667": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "669": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1426"
    },
    "672": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMP",
      "path": "6"
    },
    "673": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "674": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA31"
    },
    "677": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMP",
      "path": "6"
    },
    "678": {
      "offset": [
        1780,
        1808
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "679": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "680": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "DUP1",
      "path": "6"
    },
    "681": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "682": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B2"
    },
    "685": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "686": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "688": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "DUP1",
      "path": "6"
    },
    "689": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "REVERT",
      "path": "6"
    },
    "690": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "691": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "POP",
      "path": "6"
    },
    "692": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "695": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "697": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "698": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "DUP2",
      "path": "6"
    },
    "699": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1780,
        1808
      ],
      "op": "JUMP",
      "path": "6"
    },
    "700": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "701": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "702": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "DUP1",
      "path": "6"
    },
    "703": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "704": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C8"
    },
    "707": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "708": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "710": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "DUP1",
      "path": "6"
    },
    "711": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "REVERT",
      "path": "6"
    },
    "712": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "713": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "POP",
      "path": "6"
    },
    "714": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "717": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA5B"
    },
    "720": {
      "fn": "Lottery.start",
      "jump": "i",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMP",
      "path": "6"
    },
    "721": {
      "offset": [
        2062,
        2098
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "722": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "723": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "DUP1",
      "path": "6"
    },
    "724": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "725": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DD"
    },
    "728": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "729": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "731": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "DUP1",
      "path": "6"
    },
    "732": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "REVERT",
      "path": "6"
    },
    "733": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "734": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "POP",
      "path": "6"
    },
    "735": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "738": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "740": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "741": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "DUP2",
      "path": "6"
    },
    "742": {
      "fn": "Lottery.start",
      "offset": [
        2062,
        2098
      ],
      "op": "JUMP",
      "path": "6"
    },
    "743": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "744": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "745": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "DUP1",
      "path": "6"
    },
    "746": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "747": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3"
    },
    "750": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "751": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "753": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "DUP1",
      "path": "6"
    },
    "754": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "REVERT",
      "path": "6"
    },
    "755": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "760": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x302"
    },
    "763": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "764": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "766": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x143F"
    },
    "769": {
      "fn": "Lottery.setLoterry",
      "jump": "i",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "770": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "771": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA4"
    },
    "774": {
      "fn": "Lottery.setLoterry",
      "jump": "i",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "775": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "776": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "777": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "DUP1",
      "path": "6"
    },
    "778": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "779": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x313"
    },
    "782": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "783": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "785": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "DUP1",
      "path": "6"
    },
    "786": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "REVERT",
      "path": "6"
    },
    "787": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "788": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "POP",
      "path": "6"
    },
    "789": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "792": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD44"
    },
    "795": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "i",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "796": {
      "offset": [
        2347,
        2389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "797": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "798": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "799": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "800": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x328"
    },
    "803": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "804": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "806": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "DUP1",
      "path": "6"
    },
    "807": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "REVERT",
      "path": "6"
    },
    "808": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "809": {
      "op": "POP"
    },
    "810": {
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x150"
    },
    "813": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "816": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "817": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "819": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x146B"
    },
    "822": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "i",
      "offset": [
        2347,
        2389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "823": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "824": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "826": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "828": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "829": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "831": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "832": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "833": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "834": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "836": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "837": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "838": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "839": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "DUP2",
      "path": "6"
    },
    "840": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        2347,
        2389
      ],
      "op": "JUMP",
      "path": "6"
    },
    "841": {
      "fn": "Lottery.enter",
      "offset": [
        3488,
        3901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "842": {
      "fn": "Lottery.enter",
      "offset": [
        3488,
        3901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B0"
    },
    "845": {
      "fn": "Lottery.enter",
      "offset": [
        3488,
        3901
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE9D"
    },
    "848": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        3488,
        3901
      ],
      "op": "JUMP",
      "path": "6"
    },
    "849": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "856": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B0"
    },
    "866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36C"
    },
    "869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "875": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103B"
    },
    "880": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "881": {
      "offset": [
        2432,
        2452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "DUP1",
      "path": "6"
    },
    "884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "885": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x37D"
    },
    "888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "DUP1",
      "path": "6"
    },
    "892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "REVERT",
      "path": "6"
    },
    "893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "894": {
      "op": "POP"
    },
    "895": {
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38B"
    },
    "901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "AND",
      "path": "6"
    },
    "905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "DUP2",
      "path": "6"
    },
    "906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "JUMP",
      "path": "6"
    },
    "907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15A"
    },
    "914": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2432,
        2452
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14B1"
    },
    "919": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2432,
        2452
      ],
      "op": "JUMP",
      "path": "6"
    },
    "920": {
      "fn": "Lottery.close",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "921": {
      "fn": "Lottery.close",
      "offset": [
        4400,
        4410
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 1,
      "value": "0x0"
    },
    "923": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "925": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4396
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "926": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4396
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "928": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4396
      ],
      "op": "AND",
      "path": "6"
    },
    "929": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "931": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "DUP2",
      "path": "6"
    },
    "932": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "GT",
      "path": "6"
    },
    "933": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "934": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B1"
    },
    "937": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "938": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3B1"
    },
    "941": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "944": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4389,
        4410
      ],
      "op": "JUMP",
      "path": "6"
    },
    "945": {
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "946": {
      "branch": 56,
      "fn": "Lottery.close",
      "offset": [
        4389,
        4410
      ],
      "op": "EQ",
      "path": "6"
    },
    "947": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3D7"
    },
    "950": {
      "branch": 56,
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "951": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "953": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "960": {
      "op": "SHL"
    },
    "961": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "DUP2",
      "path": "6"
    },
    "962": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "963": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "965": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "ADD",
      "path": "6"
    },
    "966": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "969": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "970": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D9"
    },
    "973": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4381,
        4448
      ],
      "op": "JUMP",
      "path": "6"
    },
    "974": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "975": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "977": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "978": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "DUP1",
      "path": "6"
    },
    "979": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "980": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "SUB",
      "path": "6"
    },
    "981": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "982": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "983": {
      "fn": "Lottery.close",
      "offset": [
        4381,
        4448
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "984": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x40"
    },
    "986": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "987": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "996": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "997": {
      "fn": "Lottery.close",
      "offset": [
        4485,
        4489
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "998": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1000": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1001": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ADD",
      "path": "6"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "fn": "Lottery.close",
      "offset": [
        4495,
        4507
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1036": {
      "fn": "Lottery.close",
      "offset": [
        4495,
        4507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1037": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4466
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4476
      ],
      "op": "AND",
      "path": "6"
    },
    "1079": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4476
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1080": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4476
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "1085": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4476
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1091": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1093": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1094": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1095": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1096": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "SUB",
      "path": "6"
    },
    "1097": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1098": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP7",
      "path": "6"
    },
    "1099": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "GAS",
      "path": "6"
    },
    "1100": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "1101": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1102": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1103": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1104": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x45D"
    },
    "1107": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1108": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1109": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1111": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1112": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "1113": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1114": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1116": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1117": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1118": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "POP",
      "path": "6"
    },
    "1119": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "POP",
      "path": "6"
    },
    "1120": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "POP",
      "path": "6"
    },
    "1121": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "POP",
      "path": "6"
    },
    "1122": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1124": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1125": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "1126": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1128": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "NOT",
      "path": "6"
    },
    "1129": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1131": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1132": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ADD",
      "path": "6"
    },
    "1133": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "AND",
      "path": "6"
    },
    "1134": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1135": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ADD",
      "path": "6"
    },
    "1136": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1137": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1139": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1140": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "POP",
      "path": "6"
    },
    "1141": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1142": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "ADD",
      "path": "6"
    },
    "1143": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1144": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x481"
    },
    "1147": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1148": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1149": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151B"
    },
    "1152": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4462,
        4491
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1153": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4491
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1154": {
      "fn": "Lottery.close",
      "offset": [
        4462,
        4507
      ],
      "op": "LT",
      "path": "6"
    },
    "1155": {
      "branch": 57,
      "fn": "Lottery.close",
      "offset": [
        4462,
        4507
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1156": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x49F"
    },
    "1159": {
      "branch": 57,
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1160": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1162": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1163": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1169": {
      "op": "SHL"
    },
    "1170": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1171": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1172": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1174": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "ADD",
      "path": "6"
    },
    "1175": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1178": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1179": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1534"
    },
    "1182": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4454,
        4556
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1183": {
      "fn": "Lottery.close",
      "offset": [
        4454,
        4556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1184": {
      "fn": "Lottery.close",
      "offset": [
        4589,
        4606
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x4"
    },
    "1186": {
      "fn": "Lottery.close",
      "offset": [
        4589,
        4606
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1187": {
      "fn": "Lottery.close",
      "offset": [
        4570,
        4585
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "1188": {
      "fn": "Lottery.close",
      "offset": [
        4570,
        4606
      ],
      "op": "LT",
      "path": "6"
    },
    "1189": {
      "branch": 58,
      "fn": "Lottery.close",
      "offset": [
        4570,
        4606
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1190": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F1"
    },
    "1193": {
      "branch": 58,
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1194": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1196": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1197": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1203": {
      "op": "SHL"
    },
    "1204": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1205": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1208": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1210": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1211": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "ADD",
      "path": "6"
    },
    "1212": {
      "op": "MSTORE"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1217": {
      "op": "DUP3"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "MSTORE"
    },
    "1220": {
      "op": "PUSH32",
      "value": "0x4C6F747465727920686173206E6F742066696E69736865642E00000000000000"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1255": {
      "op": "DUP3"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "MSTORE"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1260": {
      "op": "ADD"
    },
    "1261": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1264": {
      "op": "JUMP"
    },
    "1265": {
      "fn": "Lottery.close",
      "offset": [
        4562,
        4635
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1266": {
      "fn": "Lottery.close",
      "offset": [
        4756,
        4765
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x6"
    },
    "1268": {
      "fn": "Lottery.close",
      "offset": [
        4756,
        4772
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1269": {
      "fn": "Lottery.close",
      "offset": [
        4775,
        4776
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1271": {
      "op": "LT"
    },
    "1272": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x539"
    },
    "1275": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1276": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1278": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1287": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1290": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1292": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1293": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "ADD",
      "path": "6"
    },
    "1294": {
      "op": "MSTORE"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "ADD"
    },
    "1301": {
      "op": "MSTORE"
    },
    "1302": {
      "op": "PUSH19",
      "value": "0x2737BA1032B737BAB3B410383630BCB2B93997"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1324": {
      "op": "SHL"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1327": {
      "op": "DUP3"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "MSTORE"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1336": {
      "op": "JUMP"
    },
    "1337": {
      "fn": "Lottery.close",
      "offset": [
        4748,
        4800
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1338": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4813
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0xC"
    },
    "1340": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1341": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1344": {
      "op": "NOT"
    },
    "1345": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "AND",
      "path": "6"
    },
    "1346": {
      "fn": "Lottery.close",
      "offset": [
        4816,
        4833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1348": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "OR",
      "path": "6"
    },
    "1349": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1350": {
      "fn": "Lottery.close",
      "offset": [
        4806,
        4833
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1351": {
      "fn": "Lottery.close",
      "offset": [
        4855,
        4872
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 6,
      "value": "0x4"
    },
    "1353": {
      "fn": "Lottery.close",
      "offset": [
        4855,
        4872
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1354": {
      "fn": "Lottery.close",
      "offset": [
        4839,
        4852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1356": {
      "fn": "Lottery.close",
      "offset": [
        4839,
        4872
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1357": {
      "fn": "Lottery.close",
      "offset": [
        4878,
        4917
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 7,
      "value": "0x596"
    },
    "1360": {
      "fn": "Lottery.close",
      "offset": [
        4896,
        4903
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1393": {
      "fn": "Lottery.close",
      "offset": [
        4904,
        4916
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "1426": {
      "fn": "Lottery.close",
      "offset": [
        4878,
        4895
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10D3"
    },
    "1429": {
      "fn": "Lottery.close",
      "jump": "i",
      "offset": [
        4878,
        4917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1430": {
      "fn": "Lottery.close",
      "offset": [
        4878,
        4917
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1431": {
      "fn": "Lottery.close",
      "offset": [
        4878,
        4917
      ],
      "op": "POP",
      "path": "6"
    },
    "1432": {
      "fn": "Lottery.close",
      "jump": "o",
      "offset": [
        4350,
        4968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1433": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1434": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6055,
        6072
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x2"
    },
    "1436": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "1438": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6051
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1439": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1441": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6051
      ],
      "op": "AND",
      "path": "6"
    },
    "1442": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1444": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1445": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "GT",
      "path": "6"
    },
    "1446": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1447": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B2"
    },
    "1450": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1451": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5B2"
    },
    "1454": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "1457": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6044,
        6072
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1458": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1459": {
      "branch": 59,
      "fn": "Lottery.fundWinner",
      "offset": [
        6044,
        6072
      ],
      "op": "EQ",
      "path": "6"
    },
    "1460": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CF"
    },
    "1463": {
      "branch": 59,
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1464": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1466": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1475": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1476": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1478": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "ADD",
      "path": "6"
    },
    "1479": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1482": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1483": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1580"
    },
    "1486": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6036,
        6117
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1487": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6036,
        6117
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1488": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6131,
        6139
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x7"
    },
    "1490": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6131,
        6139
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6131,
        6139
      ],
      "op": "AND",
      "path": "6"
    },
    "1500": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x635"
    },
    "1503": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1504": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1506": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1515": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1518": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1520": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1521": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "ADD",
      "path": "6"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1527": {
      "op": "DUP3"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH32",
      "value": "0x616464726573732830783030302E2E2E2920636F756C64206E6F742062652077"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH5",
      "value": "0x34B73732B9"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1579": {
      "op": "DUP3"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1588": {
      "op": "JUMP"
    },
    "1589": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6123,
        6194
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1590": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6216,
        6237
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1592": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6216,
        6237
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1593": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6273,
        6285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "1595": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6273,
        6285
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1596": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6200,
        6213
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1598": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6200,
        6213
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1599": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6289,
        6294
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2710"
    },
    "1602": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6289,
        6294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1603": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6265,
        6285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x64C"
    },
    "1606": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6265,
        6285
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1607": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6216,
        6237
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1608": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6265,
        6285
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x15DF"
    },
    "1611": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6265,
        6285
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1612": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6265,
        6285
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1613": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6264,
        6294
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x656"
    },
    "1616": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1617": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6264,
        6294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1618": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6264,
        6294
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1614"
    },
    "1621": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6264,
        6294
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1622": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6264,
        6294
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1623": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6243,
        6294
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6300,
        6317
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1627": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6321,
        6339
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x664"
    },
    "1630": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6243,
        6294
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1631": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6321,
        6326
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1632": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6321,
        6339
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1628"
    },
    "1635": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6321,
        6339
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1636": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6321,
        6339
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1637": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6300,
        6340
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1638": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6300,
        6340
      ],
      "op": "POP",
      "path": "6"
    },
    "1639": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6366,
        6376
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 10
    },
    "1640": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6353
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1642": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1644": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6354,
        6361
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x67D"
    },
    "1647": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1649": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1656": {
      "op": "SHL"
    },
    "1657": {
      "op": "SUB"
    },
    "1658": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1659": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1660": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1661": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6354,
        6361
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "AND",
      "path": "6"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "AND",
      "path": "6"
    },
    "1680": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1681": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1682": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1684": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "ADD",
      "path": "6"
    },
    "1685": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1686": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1687": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1688": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1690": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "ADD",
      "path": "6"
    },
    "1691": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1693": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1694": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6362
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1696": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1697": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1698": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1699": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6AC"
    },
    "1702": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1703": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1704": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "1707": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6346,
        6376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1708": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1709": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1710": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1711": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6346,
        6376
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6390,
        6398
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x7"
    },
    "1716": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6390,
        6398
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6390,
        6398
      ],
      "op": "AND",
      "path": "6"
    },
    "1726": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1728": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1729": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1730": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1731": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6389
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1733": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1735": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1736": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1738": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1739": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1740": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1741": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1742": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6403,
        6412
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1743": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6403,
        6412
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1744": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6399
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1745": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DB"
    },
    "1748": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1749": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6403,
        6412
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1750": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6403,
        6412
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1751": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "1754": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6382,
        6412
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1755": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1756": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1757": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1758": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6382,
        6412
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6442,
        6443
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x0"
    },
    "1763": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6418,
        6439
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "1765": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6418,
        6443
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1766": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6418,
        6443
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1767": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6418,
        6443
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1768": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6534,
        6550
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 13,
      "value": "0x6F3"
    },
    "1771": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6534,
        6550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1772": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6541,
        6550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "1774": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6541,
        6550
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1775": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6534,
        6550
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13D2"
    },
    "1778": {
      "fn": "Lottery.fundWinner",
      "jump": "i",
      "offset": [
        6534,
        6550
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1779": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6534,
        6550
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1780": {
      "op": "POP"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6665,
        6673
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x7"
    },
    "1784": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6658,
        6673
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1785": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6658,
        6673
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "op": "NOT"
    },
    "1795": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6658,
        6673
      ],
      "op": "AND",
      "path": "6"
    },
    "1796": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6658,
        6673
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1797": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6658,
        6673
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6686
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 15,
      "value": "0xC"
    },
    "1801": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1802": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1805": {
      "op": "NOT"
    },
    "1806": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "AND",
      "path": "6"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1809": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "OR",
      "path": "6"
    },
    "1810": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1811": {
      "fn": "Lottery.fundWinner",
      "offset": [
        6679,
        6701
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1812": {
      "fn": "Lottery.fundWinner",
      "jump": "o",
      "offset": [
        6001,
        6707
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1813": {
      "fn": "Lottery.claim",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1814": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1816": {
      "offset": [
        2325,
        2332
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1817": {
      "fn": "Lottery.claim",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1818": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "1"
    },
    "1819": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x766"
    },
    "1822": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1823": {
      "fn": "Lottery.claim",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1825": {
      "fn": "Lottery.claim",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1834": {
      "fn": "Lottery.claim",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1837": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1839": {
      "fn": "Lottery.claim",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1840": {
      "fn": "Lottery.claim",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1846": {
      "op": "DUP3"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "MSTORE"
    },
    "1849": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1884": {
      "op": "DUP3"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1889": {
      "op": "ADD"
    },
    "1890": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CE"
    },
    "1893": {
      "op": "JUMP"
    },
    "1894": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1895": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1897": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1898": {
      "fn": "Lottery.claim",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1899": {
      "fn": "Lottery.claim",
      "offset": [
        6787,
        6797
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 16
    },
    "1900": {
      "fn": "Lottery.claim",
      "offset": [
        6801,
        6802
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1902": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1903": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1904": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1905": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1907": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1909": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1910": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1912": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1913": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1914": {
      "fn": "Lottery.claim",
      "offset": [
        6779,
        6798
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1915": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C6"
    },
    "1918": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1919": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1921": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1928": {
      "op": "SHL"
    },
    "1929": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1930": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1933": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1935": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1936": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "ADD",
      "path": "6"
    },
    "1937": {
      "op": "MSTORE"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1942": {
      "op": "DUP3"
    },
    "1943": {
      "op": "ADD"
    },
    "1944": {
      "op": "MSTORE"
    },
    "1945": {
      "op": "PUSH32",
      "value": "0x596F75206E6565642066756E647320746F20636C61696D2E0000000000000000"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1980": {
      "op": "DUP3"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "MSTORE"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1985": {
      "op": "ADD"
    },
    "1986": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "1989": {
      "op": "JUMP"
    },
    "1990": {
      "fn": "Lottery.claim",
      "offset": [
        6771,
        6830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1991": {
      "fn": "Lottery.claim",
      "offset": [
        6858,
        6868
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1992": {
      "fn": "Lottery.claim",
      "offset": [
        6836,
        6847
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1994": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1995": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1996": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1997": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6857
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "1999": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2001": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2002": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2004": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2005": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2006": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2007": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2008": {
      "fn": "Lottery.claim",
      "offset": [
        6875,
        6898
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 17
    },
    "2009": {
      "fn": "Lottery.claim",
      "offset": [
        6875,
        6898
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2010": {
      "fn": "Lottery.claim",
      "offset": [
        6875,
        6898
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2011": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2012": {
      "fn": "Lottery.claim",
      "offset": [
        6904,
        6950
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 18,
      "value": "0x7E5"
    },
    "2015": {
      "fn": "Lottery.claim",
      "offset": [
        6904,
        6950
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2016": {
      "fn": "Lottery.claim",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2017": {
      "fn": "Lottery.claim",
      "offset": [
        6904,
        6934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x124D"
    },
    "2020": {
      "fn": "Lottery.claim",
      "jump": "i",
      "offset": [
        6904,
        6950
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2021": {
      "fn": "Lottery.claim",
      "offset": [
        6904,
        6950
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "offset": [
        1701,
        1702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2025": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2027": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2028": {
      "fn": "Lottery.claim",
      "jump": "o",
      "offset": [
        6728,
        6957
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2029": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2030": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2032": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2042": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 19
    },
    "2043": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2044": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x817"
    },
    "2047": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2048": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2059": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2060": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "2066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "2070": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2071": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x821"
    },
    "2075": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2077": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131B"
    },
    "2080": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2082": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2083": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7446,
        7619
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2084": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2086": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2096": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2097": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2098": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84D"
    },
    "2101": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2102": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2104": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2113": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2114": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2116": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2117": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "2120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2121": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "2124": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2125": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2126": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7513,
        7525
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 21,
      "value": "0x1"
    },
    "2128": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "2130": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7509
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2131": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2133": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7509
      ],
      "op": "AND",
      "path": "6"
    },
    "2134": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2136": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2137": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "GT",
      "path": "6"
    },
    "2138": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2139": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x866"
    },
    "2142": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2143": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x866"
    },
    "2146": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "2149": {
      "fn": "Lottery.withdrawLink",
      "jump": "i",
      "offset": [
        7502,
        7525
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2150": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2151": {
      "branch": 60,
      "fn": "Lottery.withdrawLink",
      "offset": [
        7502,
        7525
      ],
      "op": "EQ",
      "path": "6"
    },
    "2152": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8AA"
    },
    "2155": {
      "branch": 60,
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2156": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2158": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2167": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2170": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2172": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2173": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "ADD",
      "path": "6"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2179": {
      "op": "DUP3"
    },
    "2180": {
      "op": "ADD"
    },
    "2181": {
      "op": "MSTORE"
    },
    "2182": {
      "op": "PUSH20",
      "value": "0x14DD185D19481B5D5CDD0818994810D313D4D151"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "2217": {
      "op": "JUMP"
    },
    "2218": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7493,
        7550
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2219": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 22,
      "value": "0x40"
    },
    "2221": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2222": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2231": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2232": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7605,
        7609
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2233": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2235": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2236": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ADD",
      "path": "6"
    },
    "2237": {
      "op": "MSTORE"
    },
    "2238": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7560
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2277": {
      "op": "SHL"
    },
    "2278": {
      "op": "SUB"
    },
    "2279": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "AND",
      "path": "6"
    },
    "2280": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2281": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "2286": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2287": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7570,
        7580
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2288": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7570,
        7580
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2289": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2290": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7569
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2291": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7596
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2296": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7596
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2299": {
      "op": "ADD"
    },
    "2300": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2302": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2304": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2305": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2306": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2307": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "SUB",
      "path": "6"
    },
    "2308": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2309": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2310": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "GAS",
      "path": "6"
    },
    "2311": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2312": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2313": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2314": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2315": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x918"
    },
    "2318": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2319": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2320": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2322": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2323": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2324": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2325": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2327": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2328": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2329": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2330": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2331": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2332": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2333": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2335": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2336": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2337": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2339": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "NOT",
      "path": "6"
    },
    "2340": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2342": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2343": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ADD",
      "path": "6"
    },
    "2344": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "AND",
      "path": "6"
    },
    "2345": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2346": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ADD",
      "path": "6"
    },
    "2347": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2348": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2350": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2351": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "POP",
      "path": "6"
    },
    "2352": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2353": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "ADD",
      "path": "6"
    },
    "2354": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2355": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x93C"
    },
    "2358": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2359": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2360": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151B"
    },
    "2363": {
      "fn": "Lottery.withdrawLink",
      "jump": "i",
      "offset": [
        7582,
        7611
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2364": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7582,
        7611
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2365": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2367": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "2379": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2380": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2381": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SHL",
      "path": "6"
    },
    "2382": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "AND",
      "path": "6"
    },
    "2383": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2384": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2391": {
      "op": "SHL"
    },
    "2392": {
      "op": "SUB"
    },
    "2393": {
      "op": "SWAP1"
    },
    "2394": {
      "op": "SWAP3"
    },
    "2395": {
      "op": "AND"
    },
    "2396": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2398": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2399": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2400": {
      "op": "MSTORE"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2403": {
      "op": "DUP3"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2411": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2413": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2414": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2415": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2416": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SUB",
      "path": "6"
    },
    "2417": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2418": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2420": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2421": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "GAS",
      "path": "6"
    },
    "2422": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "CALL",
      "path": "6"
    },
    "2423": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2424": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2425": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2426": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x987"
    },
    "2429": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2430": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2431": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2433": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2434": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2435": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2436": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2438": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2439": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2440": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "POP",
      "path": "6"
    },
    "2441": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "POP",
      "path": "6"
    },
    "2442": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "POP",
      "path": "6"
    },
    "2443": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "POP",
      "path": "6"
    },
    "2444": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2446": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2447": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2448": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2450": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "NOT",
      "path": "6"
    },
    "2451": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2453": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2454": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2455": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "AND",
      "path": "6"
    },
    "2456": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2457": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2458": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2459": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2461": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2462": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "POP",
      "path": "6"
    },
    "2463": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2464": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "ADD",
      "path": "6"
    },
    "2465": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2466": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "2469": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2470": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2471": {
      "fn": "Lottery.withdrawLink",
      "offset": [
        7556,
        7612
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x168C"
    },
    "2474": {
      "fn": "Lottery.withdrawLink",
      "jump": "i",
      "offset": [
        7556,
        7612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2475": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2476": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9678
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 23
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "op": "SUB"
    },
    "2485": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9682,
        9696
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "2518": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "AND",
      "path": "3"
    },
    "2519": {
      "branch": 75,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "EQ",
      "path": "3"
    },
    "2520": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA23"
    },
    "2523": {
      "branch": 75,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2524": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2526": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2533": {
      "op": "SHL"
    },
    "2534": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2535": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2540": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2541": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "ADD",
      "path": "3"
    },
    "2542": {
      "op": "MSTORE"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2547": {
      "op": "DUP3"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "op": "MSTORE"
    },
    "2550": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2585": {
      "op": "DUP3"
    },
    "2586": {
      "op": "ADD"
    },
    "2587": {
      "op": "MSTORE"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2590": {
      "op": "ADD"
    },
    "2591": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CE"
    },
    "2594": {
      "op": "JUMP"
    },
    "2595": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2596": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 24,
      "value": "0xA2D"
    },
    "2599": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9756,
        9765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2600": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9777
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2601": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x136D"
    },
    "2604": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2605": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2606": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "3"
    },
    "2607": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "3"
    },
    "2608": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2609": {
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2610": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "2612": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2613": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2614": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2615": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2616": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "LT",
      "path": "6"
    },
    "2617": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA41"
    },
    "2620": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2621": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2623": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2624": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2625": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2626": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2628": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2629": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2630": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2631": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2633": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2634": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2635": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2636": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "ADD",
      "path": "6"
    },
    "2637": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "op": "SUB"
    },
    "2646": {
      "offset": [
        1812,
        1846
      ],
      "op": "AND",
      "path": "6"
    },
    "2647": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        1812,
        1846
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2648": {
      "op": "POP"
    },
    "2649": {
      "offset": [
        1812,
        1846
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2650": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        1812,
        1846
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2651": {
      "fn": "Lottery.start",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2652": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2654": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2661": {
      "op": "SHL"
    },
    "2662": {
      "op": "SUB"
    },
    "2663": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2664": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2665": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2666": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA85"
    },
    "2669": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2670": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2672": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2673": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2681": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2682": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2684": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2685": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "2688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "2692": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2693": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2694": {
      "fn": "Lottery.start",
      "offset": [
        3964,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 25,
      "value": "0x1"
    },
    "2696": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "2698": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3960
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2699": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "2701": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3960
      ],
      "op": "AND",
      "path": "6"
    },
    "2702": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2704": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2705": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "GT",
      "path": "6"
    },
    "2706": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2707": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9E"
    },
    "2710": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2711": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9E"
    },
    "2714": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "2717": {
      "fn": "Lottery.start",
      "jump": "i",
      "offset": [
        3953,
        3976
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2718": {
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2719": {
      "branch": 61,
      "fn": "Lottery.start",
      "offset": [
        3953,
        3976
      ],
      "op": "EQ",
      "path": "6"
    },
    "2720": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAF7"
    },
    "2723": {
      "branch": 61,
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2724": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2726": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2727": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2735": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2738": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2740": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2741": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "ADD",
      "path": "6"
    },
    "2742": {
      "op": "MSTORE"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2745": {
      "op": "DUP1"
    },
    "2746": {
      "op": "DUP3"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "PUSH32",
      "value": "0x4C6F7474657279206D75737420626520434C4F5345442C20706C656173652077"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2784": {
      "op": "DUP3"
    },
    "2785": {
      "op": "ADD"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH4",
      "value": "0x30B4BA17"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2797": {
      "op": "DUP3"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "MSTORE"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2802": {
      "op": "ADD"
    },
    "2803": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "2806": {
      "op": "JUMP"
    },
    "2807": {
      "fn": "Lottery.start",
      "offset": [
        3945,
        4016
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2808": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 26,
      "value": "0x40"
    },
    "2810": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2811": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2820": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2821": {
      "fn": "Lottery.start",
      "offset": [
        4053,
        4057
      ],
      "op": "ADDRESS",
      "path": "6"
    },
    "2822": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2824": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2825": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ADD",
      "path": "6"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "fn": "Lottery.start",
      "offset": [
        4063,
        4075
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2860": {
      "fn": "Lottery.start",
      "offset": [
        4063,
        4075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2861": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4034
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x0"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2900": {
      "op": "SHL"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4044
      ],
      "op": "AND",
      "path": "6"
    },
    "2903": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4044
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2904": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "2909": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4044
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2915": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2917": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2918": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2919": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2920": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "SUB",
      "path": "6"
    },
    "2921": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2922": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2923": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "GAS",
      "path": "6"
    },
    "2924": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "STATICCALL",
      "path": "6"
    },
    "2925": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2926": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2927": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2928": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB7D"
    },
    "2931": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2932": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2933": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2935": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2936": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "2937": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2938": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2940": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2941": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2942": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "POP",
      "path": "6"
    },
    "2943": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "POP",
      "path": "6"
    },
    "2944": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "POP",
      "path": "6"
    },
    "2945": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "POP",
      "path": "6"
    },
    "2946": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2948": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2949": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "2950": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2952": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "NOT",
      "path": "6"
    },
    "2953": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2955": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2956": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ADD",
      "path": "6"
    },
    "2957": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "AND",
      "path": "6"
    },
    "2958": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2959": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ADD",
      "path": "6"
    },
    "2960": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2961": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2963": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2964": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "POP",
      "path": "6"
    },
    "2965": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2966": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "ADD",
      "path": "6"
    },
    "2967": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2968": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBA1"
    },
    "2971": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2972": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2973": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151B"
    },
    "2976": {
      "fn": "Lottery.start",
      "jump": "i",
      "offset": [
        4030,
        4059
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2977": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4059
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2978": {
      "fn": "Lottery.start",
      "offset": [
        4030,
        4075
      ],
      "op": "LT",
      "path": "6"
    },
    "2979": {
      "branch": 62,
      "fn": "Lottery.start",
      "offset": [
        4030,
        4075
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2980": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBBF"
    },
    "2983": {
      "branch": 62,
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2984": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2986": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2987": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2993": {
      "op": "SHL"
    },
    "2994": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2995": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2996": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2998": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "ADD",
      "path": "6"
    },
    "2999": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3002": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3003": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1534"
    },
    "3006": {
      "fn": "Lottery.start",
      "jump": "i",
      "offset": [
        4022,
        4124
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3007": {
      "fn": "Lottery.start",
      "offset": [
        4022,
        4124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3008": {
      "fn": "Lottery.start",
      "offset": [
        4158,
        4171
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 27,
      "value": "0x5"
    },
    "3010": {
      "fn": "Lottery.start",
      "offset": [
        4158,
        4171
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3011": {
      "fn": "Lottery.start",
      "offset": [
        4138,
        4155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3013": {
      "fn": "Lottery.start",
      "offset": [
        4138,
        4155
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3014": {
      "branch": 63,
      "fn": "Lottery.start",
      "offset": [
        4138,
        4171
      ],
      "op": "GT",
      "path": "6"
    },
    "3015": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC12"
    },
    "3018": {
      "branch": 63,
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3019": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3021": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3028": {
      "op": "SHL"
    },
    "3029": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3030": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3033": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3035": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3036": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "ADD",
      "path": "6"
    },
    "3037": {
      "op": "MSTORE"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3042": {
      "op": "DUP3"
    },
    "3043": {
      "op": "ADD"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH32",
      "value": "0x4C6F74746572792068617320746F206C617374206C6F6E6765722E0000000000"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3080": {
      "op": "DUP3"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "MSTORE"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3085": {
      "op": "ADD"
    },
    "3086": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3089": {
      "op": "JUMP"
    },
    "3090": {
      "fn": "Lottery.start",
      "offset": [
        4130,
        4202
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3091": {
      "fn": "Lottery.start",
      "offset": [
        4232,
        4233
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 28,
      "value": "0x0"
    },
    "3093": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4229
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "3095": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4229
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3096": {
      "branch": 64,
      "fn": "Lottery.start",
      "offset": [
        4216,
        4233
      ],
      "op": "GT",
      "path": "6"
    },
    "3097": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3098": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3099": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC26"
    },
    "3102": {
      "branch": 64,
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3103": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "POP",
      "path": "6"
    },
    "3104": {
      "fn": "Lottery.start",
      "offset": [
        4252,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3106": {
      "fn": "Lottery.start",
      "offset": [
        4237,
        4249
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x8"
    },
    "3108": {
      "fn": "Lottery.start",
      "offset": [
        4237,
        4249
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3109": {
      "branch": 65,
      "fn": "Lottery.start",
      "offset": [
        4237,
        4253
      ],
      "op": "GT",
      "path": "6"
    },
    "3110": {
      "fn": "Lottery.start",
      "offset": [
        4216,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3111": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC98"
    },
    "3114": {
      "branch": 65,
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3115": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3117": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3126": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3129": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3131": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3132": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "ADD",
      "path": "6"
    },
    "3133": {
      "op": "MSTORE"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3138": {
      "op": "DUP3"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "op": "PUSH32",
      "value": "0x45697468657220656E7472616E63652066656520616E642066756E64696E6720"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3176": {
      "op": "DUP3"
    },
    "3177": {
      "op": "ADD"
    },
    "3178": {
      "op": "MSTORE"
    },
    "3179": {
      "op": "PUSH32",
      "value": "0x666565206861766520746F2062652061626F7665206365726F2E000000000000"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3214": {
      "op": "DUP3"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3219": {
      "op": "ADD"
    },
    "3220": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3223": {
      "op": "JUMP"
    },
    "3224": {
      "fn": "Lottery.start",
      "offset": [
        4208,
        4315
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3225": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4328
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 29,
      "value": "0xC"
    },
    "3227": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4341
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3228": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4341
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3231": {
      "op": "NOT"
    },
    "3232": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4341
      ],
      "op": "AND",
      "path": "6"
    },
    "3233": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4341
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3234": {
      "fn": "Lottery.start",
      "offset": [
        4321,
        4341
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3235": {
      "fn": "Lottery.start",
      "jump": "o",
      "offset": [
        3905,
        4346
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3236": {
      "fn": "Lottery.setLoterry",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3237": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3239": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3249": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3250": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3251": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCE"
    },
    "3254": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3264": {
      "op": "SHL"
    },
    "3265": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3266": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3267": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "3273": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3274": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "3277": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3279": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7088,
        7100
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 30,
      "value": "0x1"
    },
    "3281": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3283": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7084
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3284": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3286": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7084
      ],
      "op": "AND",
      "path": "6"
    },
    "3287": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3289": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3290": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "GT",
      "path": "6"
    },
    "3291": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3292": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE7"
    },
    "3295": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3296": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCE7"
    },
    "3299": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "3302": {
      "fn": "Lottery.setLoterry",
      "jump": "i",
      "offset": [
        7077,
        7100
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3303": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3304": {
      "branch": 66,
      "fn": "Lottery.setLoterry",
      "offset": [
        7077,
        7100
      ],
      "op": "EQ",
      "path": "6"
    },
    "3305": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD2B"
    },
    "3308": {
      "branch": 66,
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3309": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3311": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3318": {
      "op": "SHL"
    },
    "3319": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3320": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3323": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3325": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3326": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "ADD",
      "path": "6"
    },
    "3327": {
      "op": "MSTORE"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3332": {
      "op": "DUP3"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "op": "MSTORE"
    },
    "3335": {
      "op": "PUSH20",
      "value": "0x14DD185D19481B5D5CDD0818994810D313D4D151"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3361": {
      "op": "DUP3"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "MSTORE"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3366": {
      "op": "ADD"
    },
    "3367": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3370": {
      "op": "JUMP"
    },
    "3371": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7068,
        7125
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3372": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7151,
        7177
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 31,
      "value": "0xD35"
    },
    "3375": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7169,
        7177
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3376": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7151,
        7166
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3377": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7151,
        7177
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "3380": {
      "fn": "Lottery.setLoterry",
      "jump": "i",
      "offset": [
        7151,
        7177
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3381": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7151,
        7177
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3382": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7131,
        7148
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3384": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7131,
        7177
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3385": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7294,
        7307
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 32,
      "value": "0x3"
    },
    "3387": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3388": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3389": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7294,
        7325
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3390": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7294,
        7325
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3391": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7385,
        7397
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 33,
      "value": "0x8"
    },
    "3393": {
      "fn": "Lottery.setLoterry",
      "offset": [
        7385,
        7412
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3394": {
      "op": "POP"
    },
    "3395": {
      "fn": "Lottery.setLoterry",
      "jump": "o",
      "offset": [
        6960,
        7443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3396": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3397": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3399": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3409": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3410": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3411": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6E"
    },
    "3414": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3427": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3429": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3430": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "3433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3434": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "3437": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3438": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3439": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3441": {
      "offset": [
        2325,
        2332
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3442": {
      "fn": "Context._msgSender",
      "offset": [
        2325,
        2332
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3443": {
      "offset": [
        2325,
        2344
      ],
      "op": "SUB",
      "path": "1"
    },
    "3444": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDBF"
    },
    "3447": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3448": {
      "fn": "Context._msgSender",
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3450": {
      "fn": "Context._msgSender",
      "offset": [
        2317,
        2380
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3451": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3457": {
      "op": "SHL"
    },
    "3458": {
      "offset": [
        2317,
        2380
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3459": {
      "fn": "Context._msgSender",
      "offset": [
        2317,
        2380
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3462": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3464": {
      "fn": "Context._msgSender",
      "offset": [
        2317,
        2380
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3465": {
      "fn": "Context._msgSender",
      "offset": [
        2317,
        2380
      ],
      "op": "ADD",
      "path": "1"
    },
    "3466": {
      "op": "MSTORE"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3471": {
      "op": "DUP3"
    },
    "3472": {
      "op": "ADD"
    },
    "3473": {
      "op": "MSTORE"
    },
    "3474": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3509": {
      "op": "DUP3"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "MSTORE"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "offset": [
        2317,
        2380
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CE"
    },
    "3518": {
      "op": "JUMP"
    },
    "3519": {
      "offset": [
        2317,
        2380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3520": {
      "offset": [
        1744,
        1745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3522": {
      "offset": [
        2455,
        2473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3523": {
      "fn": "Context._msgSender",
      "offset": [
        2455,
        2473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3524": {
      "fn": "Context._msgSender",
      "offset": [
        2455,
        2473
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3525": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        7981
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 34,
      "value": "0xC"
    },
    "3527": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        7981
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3528": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        7981
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3530": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        7981
      ],
      "op": "AND",
      "path": "6"
    },
    "3531": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3533": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3534": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "GT",
      "path": "6"
    },
    "3535": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3536": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDDB"
    },
    "3539": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3540": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDDB"
    },
    "3543": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "3546": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "i",
      "offset": [
        7974,
        8002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3547": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3548": {
      "branch": 67,
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7974,
        8002
      ],
      "op": "EQ",
      "path": "6"
    },
    "3549": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF8"
    },
    "3552": {
      "branch": 67,
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3553": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3555": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3556": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3564": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3565": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3567": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "ADD",
      "path": "6"
    },
    "3568": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3571": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3572": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1580"
    },
    "3575": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "i",
      "offset": [
        7966,
        8047
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3576": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        7966,
        8047
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3577": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8097
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 35,
      "value": "0x4"
    },
    "3579": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8097
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3580": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE07"
    },
    "3583": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8107
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3584": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8100,
        8107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE10"
    },
    "3587": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8107
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "3590": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "i",
      "offset": [
        8080,
        8107
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3591": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8080,
        8107
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3592": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8061,
        8076
      ],
      "op": "TIMESTAMP",
      "path": "6"
    },
    "3593": {
      "branch": 68,
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8061,
        8109
      ],
      "op": "GT",
      "path": "6"
    },
    "3594": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE55"
    },
    "3597": {
      "branch": 68,
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3598": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3600": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3601": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3607": {
      "op": "SHL"
    },
    "3608": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3609": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3612": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3614": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3615": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "ADD",
      "path": "6"
    },
    "3616": {
      "op": "MSTORE"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH32",
      "value": "0x4C657373207468616E20616E20686F757220686173207061737365642E000000"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3659": {
      "op": "DUP3"
    },
    "3660": {
      "op": "ADD"
    },
    "3661": {
      "op": "MSTORE"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3664": {
      "op": "ADD"
    },
    "3665": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3668": {
      "op": "JUMP"
    },
    "3669": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8053,
        8142
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3670": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8167,
        8188
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 36,
      "value": "0x9"
    },
    "3672": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8167,
        8188
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3673": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8155
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "3675": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3677": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8156,
        8163
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE6E"
    },
    "3680": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3682": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3689": {
      "op": "SHL"
    },
    "3690": {
      "op": "SUB"
    },
    "3691": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3692": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3693": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3694": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8156,
        8163
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "SUB"
    },
    "3703": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "AND",
      "path": "6"
    },
    "3704": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3705": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3706": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "3708": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3709": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "ADD",
      "path": "6"
    },
    "3710": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3711": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3712": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3713": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3714": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3716": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "ADD",
      "path": "6"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3719": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8164
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "3720": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8148,
        8188
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3721": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8201
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 37,
      "value": "0xC"
    },
    "3723": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3724": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3727": {
      "op": "NOT"
    },
    "3728": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "AND",
      "path": "6"
    },
    "3729": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8204,
        8216
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "3731": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3732": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3733": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "OR",
      "path": "6"
    },
    "3734": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3735": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3736": {
      "fn": "Lottery.emergencyWithdraw",
      "offset": [
        8194,
        8216
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "3737": {
      "offset": [
        2628,
        2635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3739": {
      "offset": [
        2628,
        2650
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3740": {
      "fn": "Lottery.emergencyWithdraw",
      "jump": "o",
      "offset": [
        7901,
        8222
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3741": {
      "fn": "Lottery.enter",
      "offset": [
        3488,
        3901
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3742": {
      "fn": "Lottery.enter",
      "offset": [
        3545,
        3555
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 38,
      "value": "0x0"
    },
    "3744": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xC"
    },
    "3746": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3541
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3747": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "3749": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3541
      ],
      "op": "AND",
      "path": "6"
    },
    "3750": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "3752": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3753": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "GT",
      "path": "6"
    },
    "3754": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3755": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB6"
    },
    "3758": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3759": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEB6"
    },
    "3762": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x149B"
    },
    "3765": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        3534,
        3555
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3766": {
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3767": {
      "branch": 69,
      "fn": "Lottery.enter",
      "offset": [
        3534,
        3555
      ],
      "op": "EQ",
      "path": "6"
    },
    "3768": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xED3"
    },
    "3771": {
      "branch": 69,
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3772": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3774": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3775": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3781": {
      "op": "SHL"
    },
    "3782": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3783": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3784": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3786": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "ADD",
      "path": "6"
    },
    "3787": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3790": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3791": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14D9"
    },
    "3794": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        3526,
        3593
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3795": {
      "fn": "Lottery.enter",
      "offset": [
        3526,
        3593
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3796": {
      "fn": "Lottery.enter",
      "offset": [
        3620,
        3633
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x3"
    },
    "3798": {
      "fn": "Lottery.enter",
      "offset": [
        3620,
        3633
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3799": {
      "fn": "Lottery.enter",
      "offset": [
        3607,
        3616
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "3800": {
      "branch": 70,
      "fn": "Lottery.enter",
      "offset": [
        3607,
        3633
      ],
      "op": "EQ",
      "path": "6"
    },
    "3801": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF1D"
    },
    "3804": {
      "branch": 70,
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3805": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3807": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3816": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3819": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3821": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3822": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "ADD",
      "path": "6"
    },
    "3823": {
      "op": "MSTORE"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3828": {
      "op": "DUP3"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "MSTORE"
    },
    "3831": {
      "op": "PUSH22",
      "value": "0x283632B0B9B2961039B2B732103C3C1026A0AA24A197"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "3856": {
      "op": "SHL"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "ADD"
    },
    "3861": {
      "op": "MSTORE"
    },
    "3862": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3868": {
      "op": "JUMP"
    },
    "3869": {
      "fn": "Lottery.enter",
      "offset": [
        3599,
        3659
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3870": {
      "fn": "Lottery.enter",
      "offset": [
        3673,
        3682
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 40,
      "value": "0x6"
    },
    "3872": {
      "fn": "Lottery.enter",
      "offset": [
        3673,
        3689
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "3873": {
      "fn": "Lottery.enter",
      "offset": [
        3693,
        3696
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "3875": {
      "op": "LT"
    },
    "3876": {
      "branch": 71,
      "fn": "Lottery.enter",
      "offset": [
        3673,
        3696
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "3877": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF70"
    },
    "3880": {
      "branch": 71,
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3881": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3883": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3884": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3892": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3895": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3897": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3898": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "ADD",
      "path": "6"
    },
    "3899": {
      "op": "MSTORE"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH32",
      "value": "0x4D6178696D756E207061727469636970616E7427732063617061636974790000"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "MSTORE"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "3951": {
      "op": "JUMP"
    },
    "3952": {
      "fn": "Lottery.enter",
      "offset": [
        3665,
        3730
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3953": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3955": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3962": {
      "op": "SHL"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3965": {
      "fn": "Lottery.enter",
      "offset": [
        3744,
        3754
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 41
    },
    "3966": {
      "branch": 72,
      "fn": "Lottery.enter",
      "offset": [
        3744,
        3765
      ],
      "op": "SUB",
      "path": "6"
    },
    "3967": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFDD"
    },
    "3970": {
      "branch": 72,
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3971": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3973": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3974": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3980": {
      "op": "SHL"
    },
    "3981": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3982": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3985": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3987": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3988": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "ADD",
      "path": "6"
    },
    "3989": {
      "op": "MSTORE"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH32",
      "value": "0x4F776E65722063616E206E6F7420706172746963697061746520696E20746865"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "ADD"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH10",
      "value": "0x10102637BA3A32B93C97"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4051": {
      "op": "DUP3"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "4060": {
      "op": "JUMP"
    },
    "4061": {
      "fn": "Lottery.enter",
      "offset": [
        3736,
        3811
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4062": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3826
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x6"
    },
    "4064": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4065": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4066": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4068": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4069": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "ADD",
      "path": "6"
    },
    "4070": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4071": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4074": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4075": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4076": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4077": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "4110": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "ADD",
      "path": "6"
    },
    "4111": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4112": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4119": {
      "op": "SHL"
    },
    "4120": {
      "op": "SUB"
    },
    "4121": {
      "op": "NOT"
    },
    "4122": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "AND",
      "path": "6"
    },
    "4123": {
      "fn": "Lottery.enter",
      "offset": [
        3840,
        3850
      ],
      "op": "CALLER",
      "path": "6"
    },
    "4124": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "OR",
      "path": "6"
    },
    "4125": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4126": {
      "fn": "Lottery.enter",
      "offset": [
        3817,
        3852
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4127": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 43,
      "value": "0x3"
    },
    "4129": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4130": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3879
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x9"
    },
    "4132": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4133": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4134": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4135": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4136": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3879
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4137": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3879
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4138": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1034"
    },
    "4141": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4142": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4143": {
      "fn": "Lottery.enter",
      "offset": [
        3883,
        3896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4144": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "4147": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        3858,
        3896
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4148": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4149": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4150": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4151": {
      "fn": "Lottery.enter",
      "offset": [
        3858,
        3896
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "POP"
    },
    "4154": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        3488,
        3901
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4156": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4158": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "op": "SUB"
    },
    "4167": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4168": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4169": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4170": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1065"
    },
    "4173": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4176": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4183": {
      "op": "SHL"
    },
    "4184": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4185": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4186": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4188": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "4192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4193": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1657"
    },
    "4196": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4197": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "SUB"
    },
    "4206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 44
    },
    "4207": {
      "branch": 74,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "4208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10CA"
    },
    "4211": {
      "branch": 74,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4221": {
      "op": "SHL"
    },
    "4222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4235": {
      "op": "DUP3"
    },
    "4236": {
      "op": "ADD"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4288": {
      "op": "DUP3"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4293": {
      "op": "ADD"
    },
    "4294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "4297": {
      "op": "JUMP"
    },
    "4298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4299": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x596"
    },
    "4302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131B"
    },
    "4306": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7809,
        7826
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7838
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 46,
      "value": "0x0"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4349": {
      "op": "SHL"
    },
    "4350": {
      "op": "SUB"
    },
    "4351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "AND",
      "path": "3"
    },
    "4352": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4000AEA0"
    },
    "4357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7855,
        7869
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "4390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7871,
        7875
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7896
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4392": {
      "offset": [
        6589,
        6590
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4394": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4396": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4397": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4399": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "ADD",
      "path": "3"
    },
    "4400": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1143"
    },
    "4403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4405": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4406": {
      "op": "SWAP2"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4411": {
      "op": "DUP3"
    },
    "4412": {
      "op": "ADD"
    },
    "4413": {
      "op": "MSTORE"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "SWAP1"
    },
    "4418": {
      "op": "JUMP"
    },
    "4419": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4420": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4425": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "3"
    },
    "4428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "3"
    },
    "4429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4432": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4437": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4444": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "3"
    },
    "4445": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SHL",
      "path": "3"
    },
    "4448": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4449": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4450": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4452": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4453": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1170"
    },
    "4456": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4457": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4458": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4459": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4460": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16DE"
    },
    "4463": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4464": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4465": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4467": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4469": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4470": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4471": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4472": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SUB",
      "path": "3"
    },
    "4473": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4474": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4476": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4477": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "GAS",
      "path": "3"
    },
    "4478": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "CALL",
      "path": "3"
    },
    "4479": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4480": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4481": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4482": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x118F"
    },
    "4485": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4486": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4487": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4489": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4490": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4491": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4492": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4494": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4495": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4496": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "3"
    },
    "4497": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "3"
    },
    "4498": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "3"
    },
    "4499": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "3"
    },
    "4500": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4502": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4503": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4506": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "NOT",
      "path": "3"
    },
    "4507": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4509": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4510": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4511": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "3"
    },
    "4512": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4514": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4517": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4518": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "3"
    },
    "4519": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4520": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "3"
    },
    "4521": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4522": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B3"
    },
    "4525": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4526": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4527": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x168C"
    },
    "4530": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4531": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8152,
        8167
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4535": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4536": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4537": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4538": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4540": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4541": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4542": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4543": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4545": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4546": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4547": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4548": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4549": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 47
    },
    "4550": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4551": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4552": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4553": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "4"
    },
    "4554": {
      "op": "DUP9"
    },
    "4555": {
      "op": "SWAP1"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "DUP1"
    },
    "4558": {
      "op": "DUP4"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "op": "DUP6"
    },
    "4561": {
      "op": "SWAP1"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8228,
        8232
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4571": {
      "op": "DUP1"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "DUP4"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4578": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4579": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4580": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4581": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SUB",
      "path": "4"
    },
    "4582": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4583": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4584": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "4"
    },
    "4585": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4586": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4589": {
      "op": "SWAP1"
    },
    "4590": {
      "op": "SWAP2"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4593": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4594": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4595": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4596": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4597": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4598": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4599": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "ADD",
      "path": "4"
    },
    "4600": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4601": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4602": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4603": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4604": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 48
    },
    "4605": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4606": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4607": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4608": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4609": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4610": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4611": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120D"
    },
    "4614": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4615": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8701,
        8702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4617": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x163F"
    },
    "4620": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4621": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4622": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8669
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4624": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4625": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4626": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4627": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4629": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4630": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4632": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4635": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4638": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4641": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4642": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 49
    },
    "4643": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4644": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4645": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4646": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "4"
    },
    "4647": {
      "op": "DUP8"
    },
    "4648": {
      "op": "SWAP1"
    },
    "4649": {
      "op": "MSTORE"
    },
    "4650": {
      "op": "DUP1"
    },
    "4651": {
      "op": "DUP3"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "DUP5"
    },
    "4654": {
      "op": "SWAP1"
    },
    "4655": {
      "op": "MSTORE"
    },
    "4656": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4657": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4658": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4659": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4660": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SUB",
      "path": "4"
    },
    "4661": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4662": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "4"
    },
    "4663": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4664": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4667": {
      "op": "SWAP1"
    },
    "4668": {
      "op": "SWAP2"
    },
    "4669": {
      "op": "ADD"
    },
    "4670": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4671": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4672": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4673": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4674": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4675": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4676": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "ADD",
      "path": "4"
    },
    "4677": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8708,
        8747
      ],
      "op": "SWAP5",
      "path": "3",
      "statement": 50
    },
    "4679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4680": {
      "op": "POP"
    },
    "4681": {
      "op": "POP"
    },
    "4682": {
      "op": "POP"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4685": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1391,
        1583
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4686": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4688": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4689": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4690": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1460,
        1472
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4692": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4693": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4694": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4695": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4697": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4698": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "ADD",
      "path": "6"
    },
    "4699": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4700": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4701": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1498,
        1510
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4708": {
      "op": "SHL"
    },
    "4709": {
      "op": "SUB"
    },
    "4710": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1484
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4711": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1484
      ],
      "op": "AND",
      "path": "6"
    },
    "4712": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1484
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4713": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1491,
        1496
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4714": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1491,
        1496
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4715": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4717": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4718": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1277"
    },
    "4721": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4722": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4723": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1727"
    },
    "4726": {
      "fn": "TransferHelper.safeTransferETH",
      "jump": "i",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4727": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4728": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4730": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4732": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4733": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4734": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4735": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SUB",
      "path": "6"
    },
    "4736": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4737": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP6",
      "path": "6"
    },
    "4738": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP8",
      "path": "6"
    },
    "4739": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "GAS",
      "path": "6"
    },
    "4740": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "CALL",
      "path": "6"
    },
    "4741": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4742": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4743": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4744": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4745": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4746": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4747": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4749": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4750": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "EQ",
      "path": "6"
    },
    "4751": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B4"
    },
    "4754": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4755": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4757": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4758": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4759": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4760": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "4762": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "NOT",
      "path": "6"
    },
    "4763": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "4765": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4766": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "ADD",
      "path": "6"
    },
    "4767": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "AND",
      "path": "6"
    },
    "4768": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4769": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "ADD",
      "path": "6"
    },
    "4770": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4772": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4773": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4774": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4775": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4776": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "4777": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4779": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4781": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4782": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "ADD",
      "path": "6"
    },
    "4783": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "4784": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B9"
    },
    "4787": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4788": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4789": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "4791": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4792": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4793": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4794": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1477,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4795": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1459,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4796": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1459,
        1511
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4797": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1459,
        1511
      ],
      "op": "POP",
      "path": "6"
    },
    "4798": {
      "branch": 73,
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1529,
        1536
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 51
    },
    "4799": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1316"
    },
    "4802": {
      "branch": 73,
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4803": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4805": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4814": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4817": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4819": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4820": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "ADD",
      "path": "6"
    },
    "4821": {
      "op": "MSTORE"
    },
    "4822": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4826": {
      "op": "DUP3"
    },
    "4827": {
      "op": "ADD"
    },
    "4828": {
      "op": "MSTORE"
    },
    "4829": {
      "op": "PUSH32",
      "value": "0x5472616E7366657248656C7065723A204554485F5452414E534645525F464149"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "MSTORE"
    },
    "4867": {
      "op": "PUSH3",
      "value": "0x131151"
    },
    "4871": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "4873": {
      "op": "SHL"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4876": {
      "op": "DUP3"
    },
    "4877": {
      "op": "ADD"
    },
    "4878": {
      "op": "MSTORE"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4881": {
      "op": "ADD"
    },
    "4882": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CE"
    },
    "4885": {
      "op": "JUMP"
    },
    "4886": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1521,
        1576
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4887": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1449,
        1583
      ],
      "op": "POP",
      "path": "6"
    },
    "4888": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1391,
        1583
      ],
      "op": "POP",
      "path": "6"
    },
    "4889": {
      "fn": "TransferHelper.safeTransferETH",
      "offset": [
        1391,
        1583
      ],
      "op": "POP",
      "path": "6"
    },
    "4890": {
      "fn": "TransferHelper.safeTransferETH",
      "jump": "o",
      "offset": [
        1391,
        1583
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4891": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4894": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4902": {
      "op": "SHL"
    },
    "4903": {
      "op": "SUB"
    },
    "4904": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 52
    },
    "4905": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4906": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4913": {
      "op": "SHL"
    },
    "4914": {
      "op": "SUB"
    },
    "4915": {
      "op": "NOT"
    },
    "4916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "4918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4919": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "4920": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4921": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4923": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 53,
      "value": "0x40"
    },
    "4925": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "4928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4965": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4966": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4968": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4969": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4970": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4971": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "4972": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4973": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5195,
        5431
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4974": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5292,
        5304
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 54,
      "value": "0xA"
    },
    "4976": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5292,
        5319
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4977": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5292,
        5319
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4978": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5292,
        5319
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4979": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5364,
        5373
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4981": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5364,
        5380
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4982": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5325,
        5345
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4984": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5325,
        5345
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4985": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5349,
        5380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1382"
    },
    "4988": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5349,
        5380
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4989": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5307,
        5319
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4990": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5349,
        5380
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1743"
    },
    "4993": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        5349,
        5380
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4994": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5349,
        5380
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4995": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5348,
        5385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x138D"
    },
    "4998": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5348,
        5385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4999": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5384,
        5385
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "5001": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5348,
        5385
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x163F"
    },
    "5004": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        5348,
        5385
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5005": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5348,
        5385
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5006": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5325,
        5385
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5007": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5325,
        5385
      ],
      "op": "POP",
      "path": "6"
    },
    "5008": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5412
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 55,
      "value": "0x6"
    },
    "5010": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5413,
        5425
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5011": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5012": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5013": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "DUP2",
      "path": "6"
    },
    "5014": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "LT",
      "path": "6"
    },
    "5015": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A2"
    },
    "5018": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "5019": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13A2"
    },
    "5022": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1757"
    },
    "5025": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "i",
      "offset": [
        5403,
        5426
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5026": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5027": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "5029": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5030": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "DUP3",
      "path": "6"
    },
    "5031": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5032": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "5034": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5035": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5036": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "5037": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "ADD",
      "path": "6"
    },
    "5038": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5039": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5400
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "5041": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5042": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5049": {
      "op": "SHL"
    },
    "5050": {
      "op": "SUB"
    },
    "5051": {
      "op": "NOT"
    },
    "5052": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "AND",
      "path": "6"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5059": {
      "op": "SHL"
    },
    "5060": {
      "op": "SUB"
    },
    "5061": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5062": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "5063": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5403,
        5426
      ],
      "op": "AND",
      "path": "6"
    },
    "5064": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5065": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5066": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "5067": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "OR",
      "path": "6"
    },
    "5068": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5069": {
      "fn": "Lottery.fulfillRandomness",
      "offset": [
        5392,
        5426
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "5070": {
      "op": "POP"
    },
    "5071": {
      "op": "POP"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "fn": "Lottery.fulfillRandomness",
      "jump": "o",
      "offset": [
        5195,
        5431
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "SLOAD"
    },
    "5078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5080": {
      "op": "DUP3"
    },
    "5081": {
      "op": "SSTORE"
    },
    "5082": {
      "op": "SWAP1"
    },
    "5083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5085": {
      "op": "MSTORE"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5090": {
      "op": "KECCAK256"
    },
    "5091": {
      "op": "SWAP1"
    },
    "5092": {
      "op": "DUP2"
    },
    "5093": {
      "op": "ADD"
    },
    "5094": {
      "op": "SWAP1"
    },
    "5095": {
      "op": "PUSH2",
      "value": "0x596"
    },
    "5098": {
      "op": "SWAP2"
    },
    "5099": {
      "op": "SWAP1"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "DUP1"
    },
    "5102": {
      "op": "DUP3"
    },
    "5103": {
      "op": "GT"
    },
    "5104": {
      "op": "ISZERO"
    },
    "5105": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5108": {
      "op": "JUMPI"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5111": {
      "op": "DUP2"
    },
    "5112": {
      "op": "SSTORE"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5115": {
      "op": "ADD"
    },
    "5116": {
      "op": "PUSH2",
      "value": "0x13EC"
    },
    "5119": {
      "op": "JUMP"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "SWAP1"
    },
    "5123": {
      "jump": "o",
      "op": "JUMP"
    },
    "5124": {
      "op": "JUMPDEST"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5127": {
      "op": "DUP1"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5130": {
      "op": "DUP4"
    },
    "5131": {
      "op": "DUP6"
    },
    "5132": {
      "op": "SUB"
    },
    "5133": {
      "op": "SLT"
    },
    "5134": {
      "op": "ISZERO"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x1417"
    },
    "5138": {
      "op": "JUMPI"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5141": {
      "op": "DUP1"
    },
    "5142": {
      "op": "REVERT"
    },
    "5143": {
      "op": "JUMPDEST"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "op": "POP"
    },
    "5146": {
      "op": "DUP1"
    },
    "5147": {
      "op": "CALLDATALOAD"
    },
    "5148": {
      "op": "SWAP3"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5151": {
      "op": "SWAP1"
    },
    "5152": {
      "op": "SWAP2"
    },
    "5153": {
      "op": "ADD"
    },
    "5154": {
      "op": "CALLDATALOAD"
    },
    "5155": {
      "op": "SWAP2"
    },
    "5156": {
      "op": "POP"
    },
    "5157": {
      "jump": "o",
      "op": "JUMP"
    },
    "5158": {
      "op": "JUMPDEST"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5163": {
      "op": "DUP3"
    },
    "5164": {
      "op": "DUP5"
    },
    "5165": {
      "op": "SUB"
    },
    "5166": {
      "op": "SLT"
    },
    "5167": {
      "op": "ISZERO"
    },
    "5168": {
      "op": "PUSH2",
      "value": "0x1438"
    },
    "5171": {
      "op": "JUMPI"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5174": {
      "op": "DUP1"
    },
    "5175": {
      "op": "REVERT"
    },
    "5176": {
      "op": "JUMPDEST"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "op": "CALLDATALOAD"
    },
    "5179": {
      "op": "SWAP2"
    },
    "5180": {
      "op": "SWAP1"
    },
    "5181": {
      "op": "POP"
    },
    "5182": {
      "jump": "o",
      "op": "JUMP"
    },
    "5183": {
      "op": "JUMPDEST"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5186": {
      "op": "DUP1"
    },
    "5187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5191": {
      "op": "DUP5"
    },
    "5192": {
      "op": "DUP7"
    },
    "5193": {
      "op": "SUB"
    },
    "5194": {
      "op": "SLT"
    },
    "5195": {
      "op": "ISZERO"
    },
    "5196": {
      "op": "PUSH2",
      "value": "0x1454"
    },
    "5199": {
      "op": "JUMPI"
    },
    "5200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5202": {
      "op": "DUP1"
    },
    "5203": {
      "op": "REVERT"
    },
    "5204": {
      "op": "JUMPDEST"
    },
    "5205": {
      "op": "POP"
    },
    "5206": {
      "op": "POP"
    },
    "5207": {
      "op": "DUP2"
    },
    "5208": {
      "op": "CALLDATALOAD"
    },
    "5209": {
      "op": "SWAP4"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5212": {
      "op": "DUP4"
    },
    "5213": {
      "op": "ADD"
    },
    "5214": {
      "op": "CALLDATALOAD"
    },
    "5215": {
      "op": "SWAP4"
    },
    "5216": {
      "op": "POP"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5219": {
      "op": "SWAP1"
    },
    "5220": {
      "op": "SWAP3"
    },
    "5221": {
      "op": "ADD"
    },
    "5222": {
      "op": "CALLDATALOAD"
    },
    "5223": {
      "op": "SWAP2"
    },
    "5224": {
      "op": "SWAP1"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "jump": "o",
      "op": "JUMP"
    },
    "5227": {
      "op": "JUMPDEST"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5232": {
      "op": "DUP3"
    },
    "5233": {
      "op": "DUP5"
    },
    "5234": {
      "op": "SUB"
    },
    "5235": {
      "op": "SLT"
    },
    "5236": {
      "op": "ISZERO"
    },
    "5237": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5240": {
      "op": "JUMPI"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5243": {
      "op": "DUP1"
    },
    "5244": {
      "op": "REVERT"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "DUP2"
    },
    "5247": {
      "op": "CALLDATALOAD"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5254": {
      "op": "SHL"
    },
    "5255": {
      "op": "SUB"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "AND"
    },
    "5258": {
      "op": "DUP2"
    },
    "5259": {
      "op": "EQ"
    },
    "5260": {
      "op": "PUSH2",
      "value": "0x1494"
    },
    "5263": {
      "op": "JUMPI"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5266": {
      "op": "DUP1"
    },
    "5267": {
      "op": "REVERT"
    },
    "5268": {
      "op": "JUMPDEST"
    },
    "5269": {
      "op": "SWAP4"
    },
    "5270": {
      "op": "SWAP3"
    },
    "5271": {
      "op": "POP"
    },
    "5272": {
      "op": "POP"
    },
    "5273": {
      "op": "POP"
    },
    "5274": {
      "jump": "o",
      "op": "JUMP"
    },
    "5275": {
      "op": "JUMPDEST"
    },
    "5276": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5283": {
      "op": "SHL"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5286": {
      "op": "MSTORE"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5289": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5291": {
      "op": "MSTORE"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5296": {
      "op": "REVERT"
    },
    "5297": {
      "op": "JUMPDEST"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5300": {
      "op": "DUP2"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "5304": {
      "op": "DUP4"
    },
    "5305": {
      "op": "LT"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x14D3"
    },
    "5309": {
      "op": "JUMPI"
    },
    "5310": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5317": {
      "op": "SHL"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5320": {
      "op": "MSTORE"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5325": {
      "op": "MSTORE"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5330": {
      "op": "REVERT"
    },
    "5331": {
      "op": "JUMPDEST"
    },
    "5332": {
      "op": "SWAP2"
    },
    "5333": {
      "op": "SWAP1"
    },
    "5334": {
      "op": "MSTORE"
    },
    "5335": {
      "op": "SWAP1"
    },
    "5336": {
      "jump": "o",
      "op": "JUMP"
    },
    "5337": {
      "op": "JUMPDEST"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5340": {
      "op": "DUP1"
    },
    "5341": {
      "op": "DUP3"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5345": {
      "op": "SWAP1"
    },
    "5346": {
      "op": "DUP3"
    },
    "5347": {
      "op": "ADD"
    },
    "5348": {
      "op": "MSTORE"
    },
    "5349": {
      "op": "PUSH32",
      "value": "0x4C6F7474657279206D757374206265204F50454E2C20706C6561736520776169"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5384": {
      "op": "DUP3"
    },
    "5385": {
      "op": "ADD"
    },
    "5386": {
      "op": "MSTORE"
    },
    "5387": {
      "op": "PUSH2",
      "value": "0x3A17"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "5392": {
      "op": "SHL"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5395": {
      "op": "DUP3"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "op": "MSTORE"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5400": {
      "op": "ADD"
    },
    "5401": {
      "op": "SWAP1"
    },
    "5402": {
      "jump": "o",
      "op": "JUMP"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5408": {
      "op": "DUP3"
    },
    "5409": {
      "op": "DUP5"
    },
    "5410": {
      "op": "SUB"
    },
    "5411": {
      "op": "SLT"
    },
    "5412": {
      "op": "ISZERO"
    },
    "5413": {
      "op": "PUSH2",
      "value": "0x152D"
    },
    "5416": {
      "op": "JUMPI"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5419": {
      "op": "DUP1"
    },
    "5420": {
      "op": "REVERT"
    },
    "5421": {
      "op": "JUMPDEST"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "MLOAD"
    },
    "5424": {
      "op": "SWAP2"
    },
    "5425": {
      "op": "SWAP1"
    },
    "5426": {
      "op": "POP"
    },
    "5427": {
      "jump": "o",
      "op": "JUMP"
    },
    "5428": {
      "op": "JUMPDEST"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5431": {
      "op": "DUP1"
    },
    "5432": {
      "op": "DUP3"
    },
    "5433": {
      "op": "MSTORE"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5436": {
      "op": "SWAP1"
    },
    "5437": {
      "op": "DUP3"
    },
    "5438": {
      "op": "ADD"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768204C494E4B202D2066696C6C20636F6E747261637420"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5475": {
      "op": "DUP3"
    },
    "5476": {
      "op": "ADD"
    },
    "5477": {
      "op": "MSTORE"
    },
    "5478": {
      "op": "PUSH12",
      "value": "0x3BB4BA34103330BAB1B2BA17"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5493": {
      "op": "SHL"
    },
    "5494": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5496": {
      "op": "DUP3"
    },
    "5497": {
      "op": "ADD"
    },
    "5498": {
      "op": "MSTORE"
    },
    "5499": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5501": {
      "op": "ADD"
    },
    "5502": {
      "op": "SWAP1"
    },
    "5503": {
      "jump": "o",
      "op": "JUMP"
    },
    "5504": {
      "op": "JUMPDEST"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5507": {
      "op": "DUP1"
    },
    "5508": {
      "op": "DUP3"
    },
    "5509": {
      "op": "MSTORE"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "5512": {
      "op": "SWAP1"
    },
    "5513": {
      "op": "DUP3"
    },
    "5514": {
      "op": "ADD"
    },
    "5515": {
      "op": "MSTORE"
    },
    "5516": {
      "op": "PUSH32",
      "value": "0x4C6F7474657279206D7573742062652043414C43554C4154494E472C20706C65"
    },
    "5549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5551": {
      "op": "DUP3"
    },
    "5552": {
      "op": "ADD"
    },
    "5553": {
      "op": "MSTORE"
    },
    "5554": {
      "op": "PUSH9",
      "value": "0x30B9B2903BB0B4BA17"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "MSTORE"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "op": "SWAP1"
    },
    "5576": {
      "jump": "o",
      "op": "JUMP"
    },
    "5577": {
      "op": "JUMPDEST"
    },
    "5578": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5585": {
      "op": "SHL"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5588": {
      "op": "MSTORE"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5593": {
      "op": "MSTORE"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5598": {
      "op": "REVERT"
    },
    "5599": {
      "op": "JUMPDEST"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5602": {
      "op": "DUP2"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5605": {
      "op": "NOT"
    },
    "5606": {
      "op": "DIV"
    },
    "5607": {
      "op": "DUP4"
    },
    "5608": {
      "op": "GT"
    },
    "5609": {
      "op": "DUP3"
    },
    "5610": {
      "op": "ISZERO"
    },
    "5611": {
      "op": "ISZERO"
    },
    "5612": {
      "op": "AND"
    },
    "5613": {
      "op": "ISZERO"
    },
    "5614": {
      "op": "PUSH2",
      "value": "0x15F9"
    },
    "5617": {
      "op": "JUMPI"
    },
    "5618": {
      "op": "PUSH2",
      "value": "0x15F9"
    },
    "5621": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5624": {
      "jump": "i",
      "op": "JUMP"
    },
    "5625": {
      "op": "JUMPDEST"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "op": "MUL"
    },
    "5628": {
      "op": "SWAP1"
    },
    "5629": {
      "jump": "o",
      "op": "JUMP"
    },
    "5630": {
      "op": "JUMPDEST"
    },
    "5631": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5638": {
      "op": "SHL"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5641": {
      "op": "MSTORE"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5646": {
      "op": "MSTORE"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5651": {
      "op": "REVERT"
    },
    "5652": {
      "op": "JUMPDEST"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP3"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x1623"
    },
    "5659": {
      "op": "JUMPI"
    },
    "5660": {
      "op": "PUSH2",
      "value": "0x1623"
    },
    "5663": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "5666": {
      "jump": "i",
      "op": "JUMP"
    },
    "5667": {
      "op": "JUMPDEST"
    },
    "5668": {
      "op": "POP"
    },
    "5669": {
      "op": "DIV"
    },
    "5670": {
      "op": "SWAP1"
    },
    "5671": {
      "jump": "o",
      "op": "JUMP"
    },
    "5672": {
      "op": "JUMPDEST"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5675": {
      "op": "DUP3"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "LT"
    },
    "5678": {
      "op": "ISZERO"
    },
    "5679": {
      "op": "PUSH2",
      "value": "0x163A"
    },
    "5682": {
      "op": "JUMPI"
    },
    "5683": {
      "op": "PUSH2",
      "value": "0x163A"
    },
    "5686": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5689": {
      "jump": "i",
      "op": "JUMP"
    },
    "5690": {
      "op": "JUMPDEST"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "SUB"
    },
    "5693": {
      "op": "SWAP1"
    },
    "5694": {
      "jump": "o",
      "op": "JUMP"
    },
    "5695": {
      "op": "JUMPDEST"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5698": {
      "op": "DUP3"
    },
    "5699": {
      "op": "NOT"
    },
    "5700": {
      "op": "DUP3"
    },
    "5701": {
      "op": "GT"
    },
    "5702": {
      "op": "ISZERO"
    },
    "5703": {
      "op": "PUSH2",
      "value": "0x1652"
    },
    "5706": {
      "op": "JUMPI"
    },
    "5707": {
      "op": "PUSH2",
      "value": "0x1652"
    },
    "5710": {
      "op": "PUSH2",
      "value": "0x15C9"
    },
    "5713": {
      "jump": "i",
      "op": "JUMP"
    },
    "5714": {
      "op": "JUMPDEST"
    },
    "5715": {
      "op": "POP"
    },
    "5716": {
      "op": "ADD"
    },
    "5717": {
      "op": "SWAP1"
    },
    "5718": {
      "jump": "o",
      "op": "JUMP"
    },
    "5719": {
      "op": "JUMPDEST"
    },
    "5720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5722": {
      "op": "DUP1"
    },
    "5723": {
      "op": "DUP3"
    },
    "5724": {
      "op": "MSTORE"
    },
    "5725": {
      "op": "DUP2"
    },
    "5726": {
      "op": "DUP2"
    },
    "5727": {
      "op": "ADD"
    },
    "5728": {
      "op": "MSTORE"
    },
    "5729": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5764": {
      "op": "DUP3"
    },
    "5765": {
      "op": "ADD"
    },
    "5766": {
      "op": "MSTORE"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5769": {
      "op": "ADD"
    },
    "5770": {
      "op": "SWAP1"
    },
    "5771": {
      "jump": "o",
      "op": "JUMP"
    },
    "5772": {
      "op": "JUMPDEST"
    },
    "5773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5777": {
      "op": "DUP3"
    },
    "5778": {
      "op": "DUP5"
    },
    "5779": {
      "op": "SUB"
    },
    "5780": {
      "op": "SLT"
    },
    "5781": {
      "op": "ISZERO"
    },
    "5782": {
      "op": "PUSH2",
      "value": "0x169E"
    },
    "5785": {
      "op": "JUMPI"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5788": {
      "op": "DUP1"
    },
    "5789": {
      "op": "REVERT"
    },
    "5790": {
      "op": "JUMPDEST"
    },
    "5791": {
      "op": "DUP2"
    },
    "5792": {
      "op": "MLOAD"
    },
    "5793": {
      "op": "DUP1"
    },
    "5794": {
      "op": "ISZERO"
    },
    "5795": {
      "op": "ISZERO"
    },
    "5796": {
      "op": "DUP2"
    },
    "5797": {
      "op": "EQ"
    },
    "5798": {
      "op": "PUSH2",
      "value": "0x1494"
    },
    "5801": {
      "op": "JUMPI"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5804": {
      "op": "DUP1"
    },
    "5805": {
      "op": "REVERT"
    },
    "5806": {
      "op": "JUMPDEST"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5809": {
      "op": "JUMPDEST"
    },
    "5810": {
      "op": "DUP4"
    },
    "5811": {
      "op": "DUP2"
    },
    "5812": {
      "op": "LT"
    },
    "5813": {
      "op": "ISZERO"
    },
    "5814": {
      "op": "PUSH2",
      "value": "0x16C9"
    },
    "5817": {
      "op": "JUMPI"
    },
    "5818": {
      "op": "DUP2"
    },
    "5819": {
      "op": "DUP2"
    },
    "5820": {
      "op": "ADD"
    },
    "5821": {
      "op": "MLOAD"
    },
    "5822": {
      "op": "DUP4"
    },
    "5823": {
      "op": "DUP3"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "MSTORE"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5828": {
      "op": "ADD"
    },
    "5829": {
      "op": "PUSH2",
      "value": "0x16B1"
    },
    "5832": {
      "op": "JUMP"
    },
    "5833": {
      "op": "JUMPDEST"
    },
    "5834": {
      "op": "DUP4"
    },
    "5835": {
      "op": "DUP2"
    },
    "5836": {
      "op": "GT"
    },
    "5837": {
      "op": "ISZERO"
    },
    "5838": {
      "op": "PUSH2",
      "value": "0x16D8"
    },
    "5841": {
      "op": "JUMPI"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5844": {
      "op": "DUP5"
    },
    "5845": {
      "op": "DUP5"
    },
    "5846": {
      "op": "ADD"
    },
    "5847": {
      "op": "MSTORE"
    },
    "5848": {
      "op": "JUMPDEST"
    },
    "5849": {
      "op": "POP"
    },
    "5850": {
      "op": "POP"
    },
    "5851": {
      "op": "POP"
    },
    "5852": {
      "op": "POP"
    },
    "5853": {
      "jump": "o",
      "op": "JUMP"
    },
    "5854": {
      "op": "JUMPDEST"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5857": {
      "op": "DUP1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "op": "SUB"
    },
    "5862": {
      "op": "DUP5"
    },
    "5863": {
      "op": "AND"
    },
    "5864": {
      "op": "DUP2"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "DUP3"
    },
    "5867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5869": {
      "op": "DUP3"
    },
    "5870": {
      "op": "ADD"
    },
    "5871": {
      "op": "MSTORE"
    },
    "5872": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5874": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5876": {
      "op": "DUP3"
    },
    "5877": {
      "op": "ADD"
    },
    "5878": {
      "op": "MSTORE"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5881": {
      "op": "DUP3"
    },
    "5882": {
      "op": "MLOAD"
    },
    "5883": {
      "op": "DUP1"
    },
    "5884": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5886": {
      "op": "DUP5"
    },
    "5887": {
      "op": "ADD"
    },
    "5888": {
      "op": "MSTORE"
    },
    "5889": {
      "op": "PUSH2",
      "value": "0x1711"
    },
    "5892": {
      "op": "DUP2"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5895": {
      "op": "DUP6"
    },
    "5896": {
      "op": "ADD"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5899": {
      "op": "DUP8"
    },
    "5900": {
      "op": "ADD"
    },
    "5901": {
      "op": "PUSH2",
      "value": "0x16AE"
    },
    "5904": {
      "jump": "i",
      "op": "JUMP"
    },
    "5905": {
      "op": "JUMPDEST"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5911": {
      "op": "NOT"
    },
    "5912": {
      "op": "AND"
    },
    "5913": {
      "op": "SWAP2"
    },
    "5914": {
      "op": "SWAP1"
    },
    "5915": {
      "op": "SWAP2"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5919": {
      "op": "ADD"
    },
    "5920": {
      "op": "SWAP5"
    },
    "5921": {
      "op": "SWAP4"
    },
    "5922": {
      "op": "POP"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "op": "POP"
    },
    "5925": {
      "op": "POP"
    },
    "5926": {
      "jump": "o",
      "op": "JUMP"
    },
    "5927": {
      "op": "JUMPDEST"
    },
    "5928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5930": {
      "op": "DUP3"
    },
    "5931": {
      "op": "MLOAD"
    },
    "5932": {
      "op": "PUSH2",
      "value": "0x1739"
    },
    "5935": {
      "op": "DUP2"
    },
    "5936": {
      "op": "DUP5"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5939": {
      "op": "DUP8"
    },
    "5940": {
      "op": "ADD"
    },
    "5941": {
      "op": "PUSH2",
      "value": "0x16AE"
    },
    "5944": {
      "jump": "i",
      "op": "JUMP"
    },
    "5945": {
      "op": "JUMPDEST"
    },
    "5946": {
      "op": "SWAP2"
    },
    "5947": {
      "op": "SWAP1"
    },
    "5948": {
      "op": "SWAP2"
    },
    "5949": {
      "op": "ADD"
    },
    "5950": {
      "op": "SWAP3"
    },
    "5951": {
      "op": "SWAP2"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "op": "POP"
    },
    "5954": {
      "jump": "o",
      "op": "JUMP"
    },
    "5955": {
      "op": "JUMPDEST"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5958": {
      "op": "DUP3"
    },
    "5959": {
      "op": "PUSH2",
      "value": "0x1752"
    },
    "5962": {
      "op": "JUMPI"
    },
    "5963": {
      "op": "PUSH2",
      "value": "0x1752"
    },
    "5966": {
      "op": "PUSH2",
      "value": "0x15FE"
    },
    "5969": {
      "jump": "i",
      "op": "JUMP"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "op": "MOD"
    },
    "5973": {
      "op": "SWAP1"
    },
    "5974": {
      "jump": "o",
      "op": "JUMP"
    },
    "5975": {
      "op": "JUMPDEST"
    },
    "5976": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5986": {
      "op": "MSTORE"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5991": {
      "op": "MSTORE"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5996": {
      "op": "REVERT"
    }
  },
  "sha1": "2ab63ac3aca6e95b07b7f0dc31cfbfa7a13bfcd5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TransferHelper: APPROVE_FAILED\");\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TransferHelper: TRANSFER_FAILED\");\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \"TransferHelper: TRANSFER_FROM_FAILED\");\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, \"TransferHelper: ETH_TRANSFER_FAILED\");\n    }\n}\n\ncontract Lottery is VRFConsumerBase, Ownable, ReentrancyGuard{\n\n  /////////////////////STATES///////////////////////\n   \n  uint256 public s_entranceFee; \n  uint256 public s_lotteryDuration; \n  uint256 public s_lastLottery;\n  address payable[] public s_players;  //https://ethereum.stackexchange.com/questions/24061/is-there-a-maximum-array-size-in-solidity\n  address public s_winner; \n  uint256 public s_fundingFee; // ex. 670 //https://www.youtube.com/watch?v=nsf46dzgCog\n  uint256 public s_totalLotteryBalance;\n  uint256 public s_randomness;\n  bytes32 internal immutable keyHash; //https://ethereum.stackexchange.com/questions/82259/what-is-the-difference-between-the-constant-and-immutable-keywords-in-solidity\n  uint256 internal immutable chainLinkFee; \n  mapping(address => uint256) public balance;\n  enum State {OPEN,CLOSED,CALCULATING}\n  State public s_state;\n  \n\n  /////////////////// EVENTS //////////////////////\n\n  event lastWinner(address indexed _Winner, uint256 _amountWon);\n\n  // MUMBAI\n  // LINK TOKEN : 0x326C977E6efc84E512bB9C30f76E30c160eD06FB\n  // vrf_coordinator : 0x8C7382F9D8f56b33781fE506E897a4F1e2d17255\n  // fee : 0.0001 Link\n  // key_hash : 0x6e75b569a01ef56d18cab6a8e71e6600d6ce853834d4a5748b720d06f878b3a4 \n  // entranceAmount : 100000000000000000\n\n  // RINKEBY\n  // LINK TOKEN : 0x01BE23585060835E02B77ef475b0Cc51aA1e0709\n  // vrf_coordinator : 0xb3dCcb4Cf7a26f6cf6B120Cf5A73875B7BBc655B\n  // key_hash : 0x2ed0feb3e7fd2022120aa84fab1945545a9f2ffc9076fd6156fa96eaff4c1311\n  // fee : 0.1 LINK\n  // entranceAmount : 100000000000000000\n\n  //////////////////CONSTRUCTOR//////////////////////\n  \n  constructor(address _VRFCoordinator, address _LinkToken, bytes32 _keyhash)\n     \n    VRFConsumerBase(_VRFCoordinator, _LinkToken)\n   \n    {\n        keyHash = _keyhash;\n        chainLinkFee = 0.1 * 10**18; //be careful with network's fee.\n        s_state = State.CLOSED;\n    }\n\n  function enter() payable public {\n    require(s_state == State.OPEN,\"Lottery must be OPEN, please wait.\");\n    require(msg.value == s_entranceFee,\"Please, send xx MATIC.\");\n    require(s_players.length <= 100,\"Maximun participant's capacity\");\n    require(msg.sender != owner(),\"Owner can not participate in the  Lottery.\");\n    s_players.push(payable(msg.sender));\n    s_totalLotteryBalance += s_entranceFee;\n  }\n\n  function start() public onlyOwner {\n    require(s_state == State.CLOSED,\"Lottery must be CLOSED, please wait.\");\n    require(LINK.balanceOf(address(this)) >= chainLinkFee, \"Not enough LINK - fill contract with faucet.\");\n    require(s_lotteryDuration > s_lastLottery,\"Lottery has to last longer.\");\n    require(s_entranceFee > 0 && s_fundingFee > 0,\"Either entrance fee and funding fee have to be above cero.\");\n    s_state = State.OPEN;\n  }\n\n  function close( ) public {\n    require(s_state == State.OPEN,\"Lottery must be OPEN, please wait.\");\n    require(LINK.balanceOf(address(this)) >= chainLinkFee, \"Not enough LINK - fill contract with faucet.\");\n    require(block.timestamp >= s_lotteryDuration,\"Lottery has not finished.\");//https://ethereum.stackexchange.com/questions/15747/what-is-the-difference-between-now-and-block-timestamp\n    require(s_players.length > 1, \"Not enough players.\");\n    s_state = State.CALCULATING;\n    s_lastLottery = s_lotteryDuration;\n    requestRandomness(keyHash,chainLinkFee);//we need to check this call does not reverts.\n  }\n\n//https://docs.chain.link/docs/vrf-security-considerations/v1/#fulfillrandomness-must-not-revert\n//fulfillRandomness must not revert.\n//If your fulfillRandomness function uses more than 200k gas, the transaction will fail.\n\n function fulfillRandomness(bytes32 /*requestId*/, uint256 randomNumber) internal override { \n    s_randomness = randomNumber;\n    uint256 randomWinner = (s_randomness % s_players.length) + 1 ;\n    s_winner = s_players[randomWinner];\n  }\n\n  // function pickWinner() was changed to fundWinner(), reasons below.\n  //running function pickWinner() the transaction reverts and gives the following data:\n  //0x4e487b710000000000000000000000000000000000000000000000000000000000000032\n  //https://www.4byte.directory/\n  //0x4e487b71\n  //Panic(uint256)\n  //https://docs.soliditylang.org/en/v0.8.6/control-structures.html?highlight=Panic#panic-via-assert-and-error-via-require\n  //0x41: If you allocate too much memory or create an array that is too large.\n  //we think is due to copying a big number into memory.\n\n  function fundWinner() public {\n    require(s_state == State.CALCULATING,\"Lottery must be CALCULATING, please wait.\");\n    require(s_winner != address(0),\"address(0x000...) could not be winner\");\n    uint256 total = s_totalLotteryBalance;\n    uint256 amtFunding = (total * s_fundingFee) / 10000;\n    uint256 amtWinner = (total - amtFunding);\n    balance[owner()] += amtFunding;\n    balance[s_winner] += amtWinner;\n    s_totalLotteryBalance = 0; // this could be refactor to balance[LOTTERY] = 0 // Lottery as an internal balance.\n    delete s_players;//https://www.evm.codes/#60 // 429,043.00 gas for 100 elements // aprox. 2,800,000 gas for 600 elments\n    delete s_winner;\n    s_state = State.CLOSED; \n  }\n\n // pull pattern\n\n function claim() public nonReentrant {\n    require(balance[msg.sender] > 0,\"You need funds to claim.\");\n    uint256 amt = balance[msg.sender];\n    balance[msg.sender] = 0;\n    TransferHelper.safeTransferETH(msg.sender,amt);\n    }\n\n function setLoterry(uint256 _addTime, uint256 _entranceAmount, uint256 _basisPoints) public onlyOwner {\n    require( s_state == State.CLOSED,\"State must be CLOSED\" );\n    s_lotteryDuration = block.timestamp + _addTime;//e.g. 5 min = 300 blocks //https://docs.soliditylang.org/en/develop/units-and-global-variables.html#time-units\n    s_entranceFee = _entranceAmount; // e.g. 1 ETH = 1000000000000000000 Wei = 10**18 Wei.\n    s_fundingFee = _basisPoints;// e.g. 670 = 6.7 pct.  \n    }\n\n function withdrawLink() public onlyOwner {\n    require( s_state == State.CLOSED,\"State must be CLOSED\" );\n    LINK.transfer(msg.sender, LINK.balanceOf(address(this)));\n    }\n\n    //If requestRandomness reverts, we wont be able to close the lottery and send the funds.\n    //Here we could pull the funds and give them back to the next winner or do the picking off chain.\n    //Only possible if none calls fundWinner() 1 hour after close() was called.\n  \n  function emergencyWithdraw() public onlyOwner nonReentrant {\n    require(s_state == State.CALCULATING,\"Lottery must be CALCULATING, please wait.\");\n    require(block.timestamp > (s_lotteryDuration + 1 hours ),\"Less than an hour has passed.\");\n    balance[owner()] = s_totalLotteryBalance;\n    s_state = State.CLOSED;\n\n  }\n}\n\n",
  "sourceMap": "1587:6637:6:-:0;;;3209:275;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9306:32:3;;;;;9344;;;;921::0;719:10:2;921:18:0;:32::i;:::-;1701:1:1;1806:7;:22;;;3357:18:6::1;::::0;;;;3400:12:::1;3385:27;::::0;3455:7:::1;:22:::0;;-1:-1:-1;;3455:22:6::1;::::0;;::::1;::::0;;-1:-1:-1;1587:6637:6;;-1:-1:-1;1587:6637:6;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;196:354;;;;;:::o;555:127::-;1587:6637:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}